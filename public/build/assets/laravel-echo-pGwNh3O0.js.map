{"version":3,"file":"laravel-echo-pGwNh3O0.js","sources":["../../../node_modules/laravel-echo/dist/echo.js"],"sourcesContent":["function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\n/**\r\n * This class represents a basic channel.\r\n */\nvar Channel = /*#__PURE__*/function () {\n  function Channel() {\n    _classCallCheck(this, Channel);\n  }\n\n  _createClass(Channel, [{\n    key: \"listenForWhisper\",\n    value:\n    /**\r\n     * Listen for a whisper event on the channel instance.\r\n     */\n    function listenForWhisper(event, callback) {\n      return this.listen('.client-' + event, callback);\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"notification\",\n    value: function notification(callback) {\n      return this.listen('.Illuminate\\\\Notifications\\\\Events\\\\BroadcastNotificationCreated', callback);\n    }\n    /**\r\n     * Stop listening for a whisper event on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListeningForWhisper\",\n    value: function stopListeningForWhisper(event, callback) {\n      return this.stopListening('.client-' + event, callback);\n    }\n  }]);\n\n  return Channel;\n}();\n\n/**\r\n * Event name formatter\r\n */\nvar EventFormatter = /*#__PURE__*/function () {\n  /**\r\n   * Create a new class instance.\r\n   */\n  function EventFormatter(namespace) {\n    _classCallCheck(this, EventFormatter);\n\n    this.namespace = namespace; //\n  }\n  /**\r\n   * Format the given event name.\r\n   */\n\n\n  _createClass(EventFormatter, [{\n    key: \"format\",\n    value: function format(event) {\n      if (event.charAt(0) === '.' || event.charAt(0) === '\\\\') {\n        return event.substr(1);\n      } else if (this.namespace) {\n        event = this.namespace + '.' + event;\n      }\n\n      return event.replace(/\\./g, '\\\\');\n    }\n    /**\r\n     * Set the event namespace.\r\n     */\n\n  }, {\n    key: \"setNamespace\",\n    value: function setNamespace(value) {\n      this.namespace = value;\n    }\n  }]);\n\n  return EventFormatter;\n}();\n\n/**\r\n * This class represents a Pusher channel.\r\n */\n\nvar PusherChannel = /*#__PURE__*/function (_Channel) {\n  _inherits(PusherChannel, _Channel);\n\n  var _super = _createSuper(PusherChannel);\n\n  /**\r\n   * Create a new class instance.\r\n   */\n  function PusherChannel(pusher, name, options) {\n    var _this;\n\n    _classCallCheck(this, PusherChannel);\n\n    _this = _super.call(this);\n    _this.name = name;\n    _this.pusher = pusher;\n    _this.options = options;\n    _this.eventFormatter = new EventFormatter(_this.options.namespace);\n\n    _this.subscribe();\n\n    return _this;\n  }\n  /**\r\n   * Subscribe to a Pusher channel.\r\n   */\n\n\n  _createClass(PusherChannel, [{\n    key: \"subscribe\",\n    value: function subscribe() {\n      this.subscription = this.pusher.subscribe(this.name);\n    }\n    /**\r\n     * Unsubscribe from a Pusher channel.\r\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.pusher.unsubscribe(this.name);\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(event, callback) {\n      this.on(this.eventFormatter.format(event), callback);\n      return this;\n    }\n    /**\r\n     * Listen for all events on the channel instance.\r\n     */\n\n  }, {\n    key: \"listenToAll\",\n    value: function listenToAll(callback) {\n      var _this2 = this;\n\n      this.subscription.bind_global(function (event, data) {\n        if (event.startsWith('pusher:')) {\n          return;\n        }\n\n        var namespace = _this2.options.namespace.replace(/\\./g, '\\\\');\n\n        var formattedEvent = event.startsWith(namespace) ? event.substring(namespace.length + 1) : '.' + event;\n        callback(formattedEvent, data);\n      });\n      return this;\n    }\n    /**\r\n     * Stop listening for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListening\",\n    value: function stopListening(event, callback) {\n      if (callback) {\n        this.subscription.unbind(this.eventFormatter.format(event), callback);\n      } else {\n        this.subscription.unbind(this.eventFormatter.format(event));\n      }\n\n      return this;\n    }\n    /**\r\n     * Stop listening for all events on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListeningToAll\",\n    value: function stopListeningToAll(callback) {\n      if (callback) {\n        this.subscription.unbind_global(callback);\n      } else {\n        this.subscription.unbind_global();\n      }\n\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription succeeds.\r\n     */\n\n  }, {\n    key: \"subscribed\",\n    value: function subscribed(callback) {\n      this.on('pusher:subscription_succeeded', function () {\n        callback();\n      });\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription error occurs.\r\n     */\n\n  }, {\n    key: \"error\",\n    value: function error(callback) {\n      this.on('pusher:subscription_error', function (status) {\n        callback(status);\n      });\n      return this;\n    }\n    /**\r\n     * Bind a channel to an event.\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      this.subscription.bind(event, callback);\n      return this;\n    }\n  }]);\n\n  return PusherChannel;\n}(Channel);\n\n/**\r\n * This class represents a Pusher private channel.\r\n */\n\nvar PusherPrivateChannel = /*#__PURE__*/function (_PusherChannel) {\n  _inherits(PusherPrivateChannel, _PusherChannel);\n\n  var _super = _createSuper(PusherPrivateChannel);\n\n  function PusherPrivateChannel() {\n    _classCallCheck(this, PusherPrivateChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PusherPrivateChannel, [{\n    key: \"whisper\",\n    value:\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n    function whisper(eventName, data) {\n      this.pusher.channels.channels[this.name].trigger(\"client-\".concat(eventName), data);\n      return this;\n    }\n  }]);\n\n  return PusherPrivateChannel;\n}(PusherChannel);\n\n/**\r\n * This class represents a Pusher private channel.\r\n */\n\nvar PusherEncryptedPrivateChannel = /*#__PURE__*/function (_PusherChannel) {\n  _inherits(PusherEncryptedPrivateChannel, _PusherChannel);\n\n  var _super = _createSuper(PusherEncryptedPrivateChannel);\n\n  function PusherEncryptedPrivateChannel() {\n    _classCallCheck(this, PusherEncryptedPrivateChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PusherEncryptedPrivateChannel, [{\n    key: \"whisper\",\n    value:\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n    function whisper(eventName, data) {\n      this.pusher.channels.channels[this.name].trigger(\"client-\".concat(eventName), data);\n      return this;\n    }\n  }]);\n\n  return PusherEncryptedPrivateChannel;\n}(PusherChannel);\n\n/**\r\n * This class represents a Pusher presence channel.\r\n */\n\nvar PusherPresenceChannel = /*#__PURE__*/function (_PusherChannel) {\n  _inherits(PusherPresenceChannel, _PusherChannel);\n\n  var _super = _createSuper(PusherPresenceChannel);\n\n  function PusherPresenceChannel() {\n    _classCallCheck(this, PusherPresenceChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PusherPresenceChannel, [{\n    key: \"here\",\n    value:\n    /**\r\n     * Register a callback to be called anytime the member list changes.\r\n     */\n    function here(callback) {\n      this.on('pusher:subscription_succeeded', function (data) {\n        callback(Object.keys(data.members).map(function (k) {\n          return data.members[k];\n        }));\n      });\n      return this;\n    }\n    /**\r\n     * Listen for someone joining the channel.\r\n     */\n\n  }, {\n    key: \"joining\",\n    value: function joining(callback) {\n      this.on('pusher:member_added', function (member) {\n        callback(member.info);\n      });\n      return this;\n    }\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n\n  }, {\n    key: \"whisper\",\n    value: function whisper(eventName, data) {\n      this.pusher.channels.channels[this.name].trigger(\"client-\".concat(eventName), data);\n      return this;\n    }\n    /**\r\n     * Listen for someone leaving the channel.\r\n     */\n\n  }, {\n    key: \"leaving\",\n    value: function leaving(callback) {\n      this.on('pusher:member_removed', function (member) {\n        callback(member.info);\n      });\n      return this;\n    }\n  }]);\n\n  return PusherPresenceChannel;\n}(PusherChannel);\n\n/**\r\n * This class represents a Socket.io channel.\r\n */\n\nvar SocketIoChannel = /*#__PURE__*/function (_Channel) {\n  _inherits(SocketIoChannel, _Channel);\n\n  var _super = _createSuper(SocketIoChannel);\n\n  /**\r\n   * Create a new class instance.\r\n   */\n  function SocketIoChannel(socket, name, options) {\n    var _this;\n\n    _classCallCheck(this, SocketIoChannel);\n\n    _this = _super.call(this);\n    /**\r\n     * The event callbacks applied to the socket.\r\n     */\n\n    _this.events = {};\n    /**\r\n     * User supplied callbacks for events on this channel.\r\n     */\n\n    _this.listeners = {};\n    _this.name = name;\n    _this.socket = socket;\n    _this.options = options;\n    _this.eventFormatter = new EventFormatter(_this.options.namespace);\n\n    _this.subscribe();\n\n    return _this;\n  }\n  /**\r\n   * Subscribe to a Socket.io channel.\r\n   */\n\n\n  _createClass(SocketIoChannel, [{\n    key: \"subscribe\",\n    value: function subscribe() {\n      this.socket.emit('subscribe', {\n        channel: this.name,\n        auth: this.options.auth || {}\n      });\n    }\n    /**\r\n     * Unsubscribe from channel and ubind event callbacks.\r\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.unbind();\n      this.socket.emit('unsubscribe', {\n        channel: this.name,\n        auth: this.options.auth || {}\n      });\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(event, callback) {\n      this.on(this.eventFormatter.format(event), callback);\n      return this;\n    }\n    /**\r\n     * Stop listening for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListening\",\n    value: function stopListening(event, callback) {\n      this.unbindEvent(this.eventFormatter.format(event), callback);\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription succeeds.\r\n     */\n\n  }, {\n    key: \"subscribed\",\n    value: function subscribed(callback) {\n      this.on('connect', function (socket) {\n        callback(socket);\n      });\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime an error occurs.\r\n     */\n\n  }, {\n    key: \"error\",\n    value: function error(callback) {\n      return this;\n    }\n    /**\r\n     * Bind the channel's socket to an event and store the callback.\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      var _this2 = this;\n\n      this.listeners[event] = this.listeners[event] || [];\n\n      if (!this.events[event]) {\n        this.events[event] = function (channel, data) {\n          if (_this2.name === channel && _this2.listeners[event]) {\n            _this2.listeners[event].forEach(function (cb) {\n              return cb(data);\n            });\n          }\n        };\n\n        this.socket.on(event, this.events[event]);\n      }\n\n      this.listeners[event].push(callback);\n      return this;\n    }\n    /**\r\n     * Unbind the channel's socket from all stored event callbacks.\r\n     */\n\n  }, {\n    key: \"unbind\",\n    value: function unbind() {\n      var _this3 = this;\n\n      Object.keys(this.events).forEach(function (event) {\n        _this3.unbindEvent(event);\n      });\n    }\n    /**\r\n     * Unbind the listeners for the given event.\r\n     */\n\n  }, {\n    key: \"unbindEvent\",\n    value: function unbindEvent(event, callback) {\n      this.listeners[event] = this.listeners[event] || [];\n\n      if (callback) {\n        this.listeners[event] = this.listeners[event].filter(function (cb) {\n          return cb !== callback;\n        });\n      }\n\n      if (!callback || this.listeners[event].length === 0) {\n        if (this.events[event]) {\n          this.socket.removeListener(event, this.events[event]);\n          delete this.events[event];\n        }\n\n        delete this.listeners[event];\n      }\n    }\n  }]);\n\n  return SocketIoChannel;\n}(Channel);\n\n/**\r\n * This class represents a Socket.io private channel.\r\n */\n\nvar SocketIoPrivateChannel = /*#__PURE__*/function (_SocketIoChannel) {\n  _inherits(SocketIoPrivateChannel, _SocketIoChannel);\n\n  var _super = _createSuper(SocketIoPrivateChannel);\n\n  function SocketIoPrivateChannel() {\n    _classCallCheck(this, SocketIoPrivateChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SocketIoPrivateChannel, [{\n    key: \"whisper\",\n    value:\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n    function whisper(eventName, data) {\n      this.socket.emit('client event', {\n        channel: this.name,\n        event: \"client-\".concat(eventName),\n        data: data\n      });\n      return this;\n    }\n  }]);\n\n  return SocketIoPrivateChannel;\n}(SocketIoChannel);\n\n/**\r\n * This class represents a Socket.io presence channel.\r\n */\n\nvar SocketIoPresenceChannel = /*#__PURE__*/function (_SocketIoPrivateChann) {\n  _inherits(SocketIoPresenceChannel, _SocketIoPrivateChann);\n\n  var _super = _createSuper(SocketIoPresenceChannel);\n\n  function SocketIoPresenceChannel() {\n    _classCallCheck(this, SocketIoPresenceChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SocketIoPresenceChannel, [{\n    key: \"here\",\n    value:\n    /**\r\n     * Register a callback to be called anytime the member list changes.\r\n     */\n    function here(callback) {\n      this.on('presence:subscribed', function (members) {\n        callback(members.map(function (m) {\n          return m.user_info;\n        }));\n      });\n      return this;\n    }\n    /**\r\n     * Listen for someone joining the channel.\r\n     */\n\n  }, {\n    key: \"joining\",\n    value: function joining(callback) {\n      this.on('presence:joining', function (member) {\n        return callback(member.user_info);\n      });\n      return this;\n    }\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n\n  }, {\n    key: \"whisper\",\n    value: function whisper(eventName, data) {\n      this.socket.emit('client event', {\n        channel: this.name,\n        event: \"client-\".concat(eventName),\n        data: data\n      });\n      return this;\n    }\n    /**\r\n     * Listen for someone leaving the channel.\r\n     */\n\n  }, {\n    key: \"leaving\",\n    value: function leaving(callback) {\n      this.on('presence:leaving', function (member) {\n        return callback(member.user_info);\n      });\n      return this;\n    }\n  }]);\n\n  return SocketIoPresenceChannel;\n}(SocketIoPrivateChannel);\n\n/**\r\n * This class represents a null channel.\r\n */\n\nvar NullChannel = /*#__PURE__*/function (_Channel) {\n  _inherits(NullChannel, _Channel);\n\n  var _super = _createSuper(NullChannel);\n\n  function NullChannel() {\n    _classCallCheck(this, NullChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NullChannel, [{\n    key: \"subscribe\",\n    value:\n    /**\r\n     * Subscribe to a channel.\r\n     */\n    function subscribe() {//\n    }\n    /**\r\n     * Unsubscribe from a channel.\r\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {//\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(event, callback) {\n      return this;\n    }\n    /**\r\n     * Listen for all events on the channel instance.\r\n     */\n\n  }, {\n    key: \"listenToAll\",\n    value: function listenToAll(callback) {\n      return this;\n    }\n    /**\r\n     * Stop listening for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListening\",\n    value: function stopListening(event, callback) {\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription succeeds.\r\n     */\n\n  }, {\n    key: \"subscribed\",\n    value: function subscribed(callback) {\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime an error occurs.\r\n     */\n\n  }, {\n    key: \"error\",\n    value: function error(callback) {\n      return this;\n    }\n    /**\r\n     * Bind a channel to an event.\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      return this;\n    }\n  }]);\n\n  return NullChannel;\n}(Channel);\n\n/**\r\n * This class represents a null private channel.\r\n */\n\nvar NullPrivateChannel = /*#__PURE__*/function (_NullChannel) {\n  _inherits(NullPrivateChannel, _NullChannel);\n\n  var _super = _createSuper(NullPrivateChannel);\n\n  function NullPrivateChannel() {\n    _classCallCheck(this, NullPrivateChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NullPrivateChannel, [{\n    key: \"whisper\",\n    value:\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n    function whisper(eventName, data) {\n      return this;\n    }\n  }]);\n\n  return NullPrivateChannel;\n}(NullChannel);\n\n/**\r\n * This class represents a null presence channel.\r\n */\n\nvar NullPresenceChannel = /*#__PURE__*/function (_NullChannel) {\n  _inherits(NullPresenceChannel, _NullChannel);\n\n  var _super = _createSuper(NullPresenceChannel);\n\n  function NullPresenceChannel() {\n    _classCallCheck(this, NullPresenceChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NullPresenceChannel, [{\n    key: \"here\",\n    value:\n    /**\r\n     * Register a callback to be called anytime the member list changes.\r\n     */\n    function here(callback) {\n      return this;\n    }\n    /**\r\n     * Listen for someone joining the channel.\r\n     */\n\n  }, {\n    key: \"joining\",\n    value: function joining(callback) {\n      return this;\n    }\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n\n  }, {\n    key: \"whisper\",\n    value: function whisper(eventName, data) {\n      return this;\n    }\n    /**\r\n     * Listen for someone leaving the channel.\r\n     */\n\n  }, {\n    key: \"leaving\",\n    value: function leaving(callback) {\n      return this;\n    }\n  }]);\n\n  return NullPresenceChannel;\n}(NullChannel);\n\nvar Connector = /*#__PURE__*/function () {\n  /**\r\n   * Create a new class instance.\r\n   */\n  function Connector(options) {\n    _classCallCheck(this, Connector);\n\n    /**\r\n     * Default connector options.\r\n     */\n    this._defaultOptions = {\n      auth: {\n        headers: {}\n      },\n      authEndpoint: '/broadcasting/auth',\n      userAuthentication: {\n        endpoint: '/broadcasting/user-auth',\n        headers: {}\n      },\n      broadcaster: 'pusher',\n      csrfToken: null,\n      bearerToken: null,\n      host: null,\n      key: null,\n      namespace: 'App.Events'\n    };\n    this.setOptions(options);\n    this.connect();\n  }\n  /**\r\n   * Merge the custom options with the defaults.\r\n   */\n\n\n  _createClass(Connector, [{\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      this.options = _extends(this._defaultOptions, options);\n      var token = this.csrfToken();\n\n      if (token) {\n        this.options.auth.headers['X-CSRF-TOKEN'] = token;\n        this.options.userAuthentication.headers['X-CSRF-TOKEN'] = token;\n      }\n\n      token = this.options.bearerToken;\n\n      if (token) {\n        this.options.auth.headers['Authorization'] = 'Bearer ' + token;\n        this.options.userAuthentication.headers['Authorization'] = 'Bearer ' + token;\n      }\n\n      return options;\n    }\n    /**\r\n     * Extract the CSRF token from the page.\r\n     */\n\n  }, {\n    key: \"csrfToken\",\n    value: function csrfToken() {\n      var selector;\n\n      if (typeof window !== 'undefined' && window['Laravel'] && window['Laravel'].csrfToken) {\n        return window['Laravel'].csrfToken;\n      } else if (this.options.csrfToken) {\n        return this.options.csrfToken;\n      } else if (typeof document !== 'undefined' && typeof document.querySelector === 'function' && (selector = document.querySelector('meta[name=\"csrf-token\"]'))) {\n        return selector.getAttribute('content');\n      }\n\n      return null;\n    }\n  }]);\n\n  return Connector;\n}();\n\n/**\r\n * This class creates a connector to Pusher.\r\n */\n\nvar PusherConnector = /*#__PURE__*/function (_Connector) {\n  _inherits(PusherConnector, _Connector);\n\n  var _super = _createSuper(PusherConnector);\n\n  function PusherConnector() {\n    var _this;\n\n    _classCallCheck(this, PusherConnector);\n\n    _this = _super.apply(this, arguments);\n    /**\r\n     * All of the subscribed channel names.\r\n     */\n\n    _this.channels = {};\n    return _this;\n  }\n  /**\r\n   * Create a fresh Pusher connection.\r\n   */\n\n\n  _createClass(PusherConnector, [{\n    key: \"connect\",\n    value: function connect() {\n      if (typeof this.options.client !== 'undefined') {\n        this.pusher = this.options.client;\n      } else if (this.options.Pusher) {\n        this.pusher = new this.options.Pusher(this.options.key, this.options);\n      } else {\n        this.pusher = new Pusher(this.options.key, this.options);\n      }\n    }\n    /**\r\n     * Sign in the user via Pusher user authentication (https://pusher.com/docs/channels/using_channels/user-authentication/).\r\n     */\n\n  }, {\n    key: \"signin\",\n    value: function signin() {\n      this.pusher.signin();\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(name, event, callback) {\n      return this.channel(name).listen(event, callback);\n    }\n    /**\r\n     * Get a channel instance by name.\r\n     */\n\n  }, {\n    key: \"channel\",\n    value: function channel(name) {\n      if (!this.channels[name]) {\n        this.channels[name] = new PusherChannel(this.pusher, name, this.options);\n      }\n\n      return this.channels[name];\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n\n  }, {\n    key: \"privateChannel\",\n    value: function privateChannel(name) {\n      if (!this.channels['private-' + name]) {\n        this.channels['private-' + name] = new PusherPrivateChannel(this.pusher, 'private-' + name, this.options);\n      }\n\n      return this.channels['private-' + name];\n    }\n    /**\r\n     * Get a private encrypted channel instance by name.\r\n     */\n\n  }, {\n    key: \"encryptedPrivateChannel\",\n    value: function encryptedPrivateChannel(name) {\n      if (!this.channels['private-encrypted-' + name]) {\n        this.channels['private-encrypted-' + name] = new PusherEncryptedPrivateChannel(this.pusher, 'private-encrypted-' + name, this.options);\n      }\n\n      return this.channels['private-encrypted-' + name];\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n\n  }, {\n    key: \"presenceChannel\",\n    value: function presenceChannel(name) {\n      if (!this.channels['presence-' + name]) {\n        this.channels['presence-' + name] = new PusherPresenceChannel(this.pusher, 'presence-' + name, this.options);\n      }\n\n      return this.channels['presence-' + name];\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n\n  }, {\n    key: \"leave\",\n    value: function leave(name) {\n      var _this2 = this;\n\n      var channels = [name, 'private-' + name, 'private-encrypted-' + name, 'presence-' + name];\n      channels.forEach(function (name, index) {\n        _this2.leaveChannel(name);\n      });\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(name) {\n      if (this.channels[name]) {\n        this.channels[name].unsubscribe();\n        delete this.channels[name];\n      }\n    }\n    /**\r\n     * Get the socket ID for the connection.\r\n     */\n\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return this.pusher.connection.socket_id;\n    }\n    /**\r\n     * Disconnect Pusher connection.\r\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.pusher.disconnect();\n    }\n  }]);\n\n  return PusherConnector;\n}(Connector);\n\n/**\r\n * This class creates a connnector to a Socket.io server.\r\n */\n\nvar SocketIoConnector = /*#__PURE__*/function (_Connector) {\n  _inherits(SocketIoConnector, _Connector);\n\n  var _super = _createSuper(SocketIoConnector);\n\n  function SocketIoConnector() {\n    var _this;\n\n    _classCallCheck(this, SocketIoConnector);\n\n    _this = _super.apply(this, arguments);\n    /**\r\n     * All of the subscribed channel names.\r\n     */\n\n    _this.channels = {};\n    return _this;\n  }\n  /**\r\n   * Create a fresh Socket.io connection.\r\n   */\n\n\n  _createClass(SocketIoConnector, [{\n    key: \"connect\",\n    value: function connect() {\n      var _this2 = this;\n\n      var io = this.getSocketIO();\n      this.socket = io(this.options.host, this.options);\n      this.socket.on('reconnect', function () {\n        Object.values(_this2.channels).forEach(function (channel) {\n          channel.subscribe();\n        });\n      });\n      return this.socket;\n    }\n    /**\r\n     * Get socket.io module from global scope or options.\r\n     */\n\n  }, {\n    key: \"getSocketIO\",\n    value: function getSocketIO() {\n      if (typeof this.options.client !== 'undefined') {\n        return this.options.client;\n      }\n\n      if (typeof io !== 'undefined') {\n        return io;\n      }\n\n      throw new Error('Socket.io client not found. Should be globally available or passed via options.client');\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(name, event, callback) {\n      return this.channel(name).listen(event, callback);\n    }\n    /**\r\n     * Get a channel instance by name.\r\n     */\n\n  }, {\n    key: \"channel\",\n    value: function channel(name) {\n      if (!this.channels[name]) {\n        this.channels[name] = new SocketIoChannel(this.socket, name, this.options);\n      }\n\n      return this.channels[name];\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n\n  }, {\n    key: \"privateChannel\",\n    value: function privateChannel(name) {\n      if (!this.channels['private-' + name]) {\n        this.channels['private-' + name] = new SocketIoPrivateChannel(this.socket, 'private-' + name, this.options);\n      }\n\n      return this.channels['private-' + name];\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n\n  }, {\n    key: \"presenceChannel\",\n    value: function presenceChannel(name) {\n      if (!this.channels['presence-' + name]) {\n        this.channels['presence-' + name] = new SocketIoPresenceChannel(this.socket, 'presence-' + name, this.options);\n      }\n\n      return this.channels['presence-' + name];\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n\n  }, {\n    key: \"leave\",\n    value: function leave(name) {\n      var _this3 = this;\n\n      var channels = [name, 'private-' + name, 'presence-' + name];\n      channels.forEach(function (name) {\n        _this3.leaveChannel(name);\n      });\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(name) {\n      if (this.channels[name]) {\n        this.channels[name].unsubscribe();\n        delete this.channels[name];\n      }\n    }\n    /**\r\n     * Get the socket ID for the connection.\r\n     */\n\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return this.socket.id;\n    }\n    /**\r\n     * Disconnect Socketio connection.\r\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.socket.disconnect();\n    }\n  }]);\n\n  return SocketIoConnector;\n}(Connector);\n\n/**\r\n * This class creates a null connector.\r\n */\n\nvar NullConnector = /*#__PURE__*/function (_Connector) {\n  _inherits(NullConnector, _Connector);\n\n  var _super = _createSuper(NullConnector);\n\n  function NullConnector() {\n    var _this;\n\n    _classCallCheck(this, NullConnector);\n\n    _this = _super.apply(this, arguments);\n    /**\r\n     * All of the subscribed channel names.\r\n     */\n\n    _this.channels = {};\n    return _this;\n  }\n  /**\r\n   * Create a fresh connection.\r\n   */\n\n\n  _createClass(NullConnector, [{\n    key: \"connect\",\n    value: function connect() {//\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(name, event, callback) {\n      return new NullChannel();\n    }\n    /**\r\n     * Get a channel instance by name.\r\n     */\n\n  }, {\n    key: \"channel\",\n    value: function channel(name) {\n      return new NullChannel();\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n\n  }, {\n    key: \"privateChannel\",\n    value: function privateChannel(name) {\n      return new NullPrivateChannel();\n    }\n    /**\r\n     * Get a private encrypted channel instance by name.\r\n     */\n\n  }, {\n    key: \"encryptedPrivateChannel\",\n    value: function encryptedPrivateChannel(name) {\n      return new NullPrivateChannel();\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n\n  }, {\n    key: \"presenceChannel\",\n    value: function presenceChannel(name) {\n      return new NullPresenceChannel();\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n\n  }, {\n    key: \"leave\",\n    value: function leave(name) {//\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(name) {//\n    }\n    /**\r\n     * Get the socket ID for the connection.\r\n     */\n\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return 'fake-socket-id';\n    }\n    /**\r\n     * Disconnect the connection.\r\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {//\n    }\n  }]);\n\n  return NullConnector;\n}(Connector);\n\n/**\r\n * This class is the primary API for interacting with broadcasting.\r\n */\n\nvar Echo = /*#__PURE__*/function () {\n  /**\r\n   * Create a new class instance.\r\n   */\n  function Echo(options) {\n    _classCallCheck(this, Echo);\n\n    this.options = options;\n    this.connect();\n\n    if (!this.options.withoutInterceptors) {\n      this.registerInterceptors();\n    }\n  }\n  /**\r\n   * Get a channel instance by name.\r\n   */\n\n\n  _createClass(Echo, [{\n    key: \"channel\",\n    value: function channel(_channel) {\n      return this.connector.channel(_channel);\n    }\n    /**\r\n     * Create a new connection.\r\n     */\n\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      if (this.options.broadcaster == 'pusher') {\n        this.connector = new PusherConnector(this.options);\n      } else if (this.options.broadcaster == 'socket.io') {\n        this.connector = new SocketIoConnector(this.options);\n      } else if (this.options.broadcaster == 'null') {\n        this.connector = new NullConnector(this.options);\n      } else if (typeof this.options.broadcaster == 'function') {\n        this.connector = new this.options.broadcaster(this.options);\n      }\n    }\n    /**\r\n     * Disconnect from the Echo server.\r\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.connector.disconnect();\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n\n  }, {\n    key: \"join\",\n    value: function join(channel) {\n      return this.connector.presenceChannel(channel);\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n\n  }, {\n    key: \"leave\",\n    value: function leave(channel) {\n      this.connector.leave(channel);\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(channel) {\n      this.connector.leaveChannel(channel);\n    }\n    /**\r\n     * Leave all channels.\r\n     */\n\n  }, {\n    key: \"leaveAllChannels\",\n    value: function leaveAllChannels() {\n      for (var channel in this.connector.channels) {\n        this.leaveChannel(channel);\n      }\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(channel, event, callback) {\n      return this.connector.listen(channel, event, callback);\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n\n  }, {\n    key: \"private\",\n    value: function _private(channel) {\n      return this.connector.privateChannel(channel);\n    }\n    /**\r\n     * Get a private encrypted channel instance by name.\r\n     */\n\n  }, {\n    key: \"encryptedPrivate\",\n    value: function encryptedPrivate(channel) {\n      return this.connector.encryptedPrivateChannel(channel);\n    }\n    /**\r\n     * Get the Socket ID for the connection.\r\n     */\n\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return this.connector.socketId();\n    }\n    /**\r\n     * Register 3rd party request interceptiors. These are used to automatically\r\n     * send a connections socket id to a Laravel app with a X-Socket-Id header.\r\n     */\n\n  }, {\n    key: \"registerInterceptors\",\n    value: function registerInterceptors() {\n      if (typeof Vue === 'function' && Vue.http) {\n        this.registerVueRequestInterceptor();\n      }\n\n      if (typeof axios === 'function') {\n        this.registerAxiosRequestInterceptor();\n      }\n\n      if (typeof jQuery === 'function') {\n        this.registerjQueryAjaxSetup();\n      }\n\n      if ((typeof Turbo === \"undefined\" ? \"undefined\" : _typeof(Turbo)) === 'object') {\n        this.registerTurboRequestInterceptor();\n      }\n    }\n    /**\r\n     * Register a Vue HTTP interceptor to add the X-Socket-ID header.\r\n     */\n\n  }, {\n    key: \"registerVueRequestInterceptor\",\n    value: function registerVueRequestInterceptor() {\n      var _this = this;\n\n      Vue.http.interceptors.push(function (request, next) {\n        if (_this.socketId()) {\n          request.headers.set('X-Socket-ID', _this.socketId());\n        }\n\n        next();\n      });\n    }\n    /**\r\n     * Register an Axios HTTP interceptor to add the X-Socket-ID header.\r\n     */\n\n  }, {\n    key: \"registerAxiosRequestInterceptor\",\n    value: function registerAxiosRequestInterceptor() {\n      var _this2 = this;\n\n      axios.interceptors.request.use(function (config) {\n        if (_this2.socketId()) {\n          config.headers['X-Socket-Id'] = _this2.socketId();\n        }\n\n        return config;\n      });\n    }\n    /**\r\n     * Register jQuery AjaxPrefilter to add the X-Socket-ID header.\r\n     */\n\n  }, {\n    key: \"registerjQueryAjaxSetup\",\n    value: function registerjQueryAjaxSetup() {\n      var _this3 = this;\n\n      if (typeof jQuery.ajax != 'undefined') {\n        jQuery.ajaxPrefilter(function (options, originalOptions, xhr) {\n          if (_this3.socketId()) {\n            xhr.setRequestHeader('X-Socket-Id', _this3.socketId());\n          }\n        });\n      }\n    }\n    /**\r\n     * Register the Turbo Request interceptor to add the X-Socket-ID header.\r\n     */\n\n  }, {\n    key: \"registerTurboRequestInterceptor\",\n    value: function registerTurboRequestInterceptor() {\n      var _this4 = this;\n\n      document.addEventListener('turbo:before-fetch-request', function (event) {\n        event.detail.fetchOptions.headers['X-Socket-Id'] = _this4.socketId();\n      });\n    }\n  }]);\n\n  return Echo;\n}();\n\nexport { Channel, Connector, EventFormatter, Echo as default };\n"],"names":["_typeof","obj","_classCallCheck","instance","Constructor","_defineProperties","target","props","i","descriptor","_createClass","protoProps","staticProps","_extends","source","key","_inherits","subClass","superClass","_setPrototypeOf","_getPrototypeOf","o","p","_isNativeReflectConstruct","_assertThisInitialized","self","_possibleConstructorReturn","call","_createSuper","Derived","hasNativeReflectConstruct","Super","result","NewTarget","Channel","event","callback","EventFormatter","namespace","value","PusherChannel","_Channel","_super","pusher","name","options","_this","_this2","data","formattedEvent","status","PusherPrivateChannel","_PusherChannel","eventName","PusherEncryptedPrivateChannel","PusherPresenceChannel","k","member","SocketIoChannel","socket","channel","cb","_this3","SocketIoPrivateChannel","_SocketIoChannel","SocketIoPresenceChannel","_SocketIoPrivateChann","members","m","NullChannel","NullPrivateChannel","_NullChannel","NullPresenceChannel","Connector","token","selector","PusherConnector","_Connector","channels","index","SocketIoConnector","io","NullConnector","Echo","_channel","request","next","config","originalOptions","xhr","_this4"],"mappings":"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","x_google_ignoreList":[0]}