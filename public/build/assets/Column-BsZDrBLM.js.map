{"version":3,"file":"Column-BsZDrBLM.js","sources":["../../../resources/js/Pages/Kanban/Column.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport AddCard from \"./AddCard\";\nimport Card from \"./Card\";\nimport DropIndicator from \"./DropIndicator\";\nimport { useForm } from '@inertiajs/react'\nimport Dropdown from \"@/Components/Dropdown\";\nimport Modal from \"@/Components/Modal\";\nimport SecondaryButton from \"@/Components/SecondaryButton\";\nimport DangerButton from \"@/Components/DangerButton\";\nimport UpdateColumn from \"./UpdateColumn\";\n\nconst Column = ({ title, headingColor, cards, column, setCards, columns, temp_id }) => {\n\n    const { data, setData, delete: destroy, put, processing, reset } = useForm({\n        column: ''\n    })\n\n    const [active, setActive] = useState(false);\n    const [confirmingUserDeletion, setConfirmingUserDeletion] = useState(false);\n    const [columnId, setColumnId] = useState(null); // State to store column ID\n    const [showModal, setShowModal] = useState(false);\n\n    const confirmUserDeletion = (columnId) => {\n        setConfirmingUserDeletion(true);\n        setColumnId(columnId);\n    };\n\n    const deleteColumn = (e) => {\n        e.preventDefault();\n\n        destroy(route('column.destroy', temp_id), {\n            preserveScroll: true,\n\n            // onSuccess: () => {\n            //     // Remove the column from the UI\n            //     removeColumn(columnId);\n            //     closeModal();\n            // },\n        });\n\n        removeColumn(columnId);\n    };\n\n    const removeColumn = (columnId) => {\n        // Filter out the column with the specified ID\n        // const cardId = e.dataTransfer.getData(\"cardId\");\n\n        columns((pv) => pv.filter((c) => c.temp_id !== columnId));\n    };\n\n    const closeModal = () => {\n        setConfirmingUserDeletion(false);\n\n        reset();\n    };\n\n    const handleDragStart = (e, card) => {\n        e.dataTransfer.setData(\"cardId\", card.id);\n        e.dataTransfer.setData(\"card_id\", card.card_id);\n    };\n\n    const handleDragEnd = (e) => {\n        const cardId = e.dataTransfer.getData(\"card_id\");\n\n        setActive(false);\n        clearHighlights();\n\n        const indicators = getIndicators();\n\n        data.column = column\n\n        e.preventDefault()\n\n        put(route('card.updateCard', cardId))\n\n        const { element } = getNearestIndicator(e, indicators);\n\n        const before = element.dataset.before || \"-1\";\n        if (before !== cardId) {\n        let copy = [...cards];\n\n        let cardToTransfer = copy.find((c) => c.card_id === cardId);\n\n        if (!cardToTransfer) return;\n        cardToTransfer = { ...cardToTransfer, column };\n\n        copy = copy.filter((c) => c.card_id !== cardId);\n\n        const moveToBack = before === \"-1\";\n\n        if (moveToBack) {\n            copy.push(cardToTransfer);\n        } else {\n            const insertAtIndex = copy.findIndex((el) => el.id === before);\n            if (insertAtIndex === undefined) return;\n\n            copy.splice(insertAtIndex, 0, cardToTransfer);\n        }\n\n        setCards(copy);\n        }\n    };\n\n  const handleDragOver = (e) => {\n    const cardId = e.dataTransfer.getData(\"cardId\");\n\n    e.preventDefault();\n    highlightIndicator(e);\n\n    setActive(true);\n  };\n\n  const clearHighlights = (els) => {\n    const indicators = els || getIndicators();\n\n    indicators.forEach((i) => {\n      i.style.opacity = \"0\";\n    });\n  };\n\n  const highlightIndicator = (e) => {\n    const indicators = getIndicators();\n\n    clearHighlights(indicators);\n\n    const el = getNearestIndicator(e, indicators);\n\n    el.element.style.opacity = \"1\";\n  };\n\n  const getNearestIndicator = (e, indicators) => {\n    const DISTANCE_OFFSET = 50;\n\n    const el = indicators.reduce(\n      (closest, child) => {\n        const box = child.getBoundingClientRect();\n\n        const offset = e.clientY - (box.top + DISTANCE_OFFSET);\n\n        if (offset < 0 && offset > closest.offset) {\n          return { offset: offset, element: child };\n        } else {\n          return closest;\n        }\n      },\n      {\n        offset: Number.NEGATIVE_INFINITY,\n        element: indicators[indicators.length - 1],\n      }\n    );\n\n    return el;\n  };\n\n    const getIndicators = () => {\n        return Array.from(document.querySelectorAll(`[data-column=\"${column}\"]`));\n    };\n\n    const handleDragLeave = () => {\n        clearHighlights();\n        setActive(false);\n    };\n\n    const filteredCards = cards.filter((c) => c.column === column);\n\n    const [updatedTitle, setupdatedTitle] = useState(null)\n\n    const setDataFromUpdateColumn = (updatedData) => {\n        // Handle the updated data here\n        setupdatedTitle(updatedData.title)\n    };\n\n  return (\n    <div className=\"w-56 shrink-0\">\n        <div className=\"mb-3 flex items-center justify-between\">\n            <h3 className={`font-medium ${headingColor} flex items-center justify-center`}>\n                <span>{ updatedTitle ? updatedTitle : title}</span>\n                <Dropdown>\n                    <Dropdown.Trigger>\n                        <span className=\"inline-flex rounded-md\">\n                            <button\n                                type=\"button\"\n                                className=\"inline-flex items-center py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-400 hover:text-gray-700 focus:outline-none transition ease-in-out duration-150 capitalize\"\n                            >\n                                <svg\n                                    className=\"ms-2 -me-0.5 h-4 w-4\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    viewBox=\"0 0 20 20\"\n                                    fill=\"currentColor\"\n                                >\n                                    <path\n                                        fillRule=\"evenodd\"\n                                        d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n                                        clipRule=\"evenodd\"\n                                    />\n                                </svg>\n                            </button>\n                        </span>\n                    </Dropdown.Trigger>\n\n                    <Dropdown.Content align=\"left\" width=\"28\">\n                        {/* <Dropdown.Link href={route('myshop.index')}>Edit</Dropdown.Link> */}\n                        <button\n                            className=\"block w-full px-4 py-2 text-start text-sm leading-5 text-gray-700 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 transition duration-150 ease-in-out\"\n                            onClick={() => setShowModal(true)}\n                        >\n                            Edit\n                        </button>\n                        <button\n                            className=\"block w-full px-4 py-2 text-start text-sm leading-5 text-gray-700 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 transition duration-150 ease-in-out\"\n                            onClick={() => confirmUserDeletion(temp_id)}\n                        >\n                            Delete\n                        </button>\n                    </Dropdown.Content>\n                </Dropdown>\n            </h3>\n\n            <span className=\"rounded text-sm text-neutral-200\">\n            {filteredCards.length}\n            </span>\n        </div>\n    <div\n        onDrop={handleDragEnd}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        className={`h-full w-full transition-colors ${\n          active ? \"bg-neutral-800/50\" : \"bg-neutral-800/0\"\n        }`}\n      >\n        {filteredCards.map((c) => {\n          return <Card key={c.id} {...c} handleDragStart={handleDragStart} />;\n        })}\n        <DropIndicator beforeId={null} column={column} />\n        <AddCard column={column} temp_id={temp_id} setCards={setCards} />\n\n      </div>\n\n        <Modal show={confirmingUserDeletion} onClose={closeModal}>\n            <form onSubmit={deleteColumn} className=\"p-6\">\n                <h2 className=\"text-lg font-medium text-gray-900\">\n                    All the data of this column will be deleted.<br></br><br></br>\n                    Are you sure you want to delete this column?\n                </h2>\n\n                <div className=\"mt-6 flex justify-end\">\n                    <SecondaryButton onClick={closeModal}>No</SecondaryButton>\n\n                    <DangerButton className=\"ms-3\" disabled={processing}>\n                        Yes\n                    </DangerButton>\n                </div>\n            </form>\n        </Modal>\n\n        <UpdateColumn\n            showModal={showModal}\n            setShowModal={setShowModal}\n            temp_id={temp_id}\n            title={title}\n            setData={setData}\n            setDataFromUpdateColumn={setDataFromUpdateColumn}\n        />\n\n    </div>\n  );\n};\n\nexport default Column\n"],"names":["Column","title","headingColor","cards","column","setCards","columns","temp_id","data","setData","destroy","put","processing","reset","useForm","active","setActive","useState","confirmingUserDeletion","setConfirmingUserDeletion","columnId","setColumnId","showModal","setShowModal","confirmUserDeletion","deleteColumn","e","removeColumn","pv","c","closeModal","handleDragStart","card","handleDragEnd","cardId","clearHighlights","indicators","getIndicators","element","getNearestIndicator","before","copy","cardToTransfer","insertAtIndex","el","handleDragOver","highlightIndicator","els","i","closest","child","box","offset","handleDragLeave","filteredCards","updatedTitle","setupdatedTitle","setDataFromUpdateColumn","updatedData","jsxs","jsx","Dropdown","Card","DropIndicator","AddCard","Modal","SecondaryButton","DangerButton","UpdateColumn"],"mappings":"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"}