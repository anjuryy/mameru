{"version":3,"file":"Login-dufGfsbT.js","sources":["../../../resources/js/Components/Checkbox.jsx","../../../resources/js/Pages/Auth/Login.jsx"],"sourcesContent":["export default function Checkbox({ className = '', ...props }) {\n    return (\n        <input\n            {...props}\n            type=\"checkbox\"\n            className={\n                'rounded border-gray-300 text-indigo-600 shadow-sm focus:ring-indigo-500 ' +\n                className\n            }\n        />\n    );\n}\n","import { useEffect } from 'react';\nimport Checkbox from '@/Components/Checkbox';\nimport GuestLayout from '@/Layouts/GuestLayout';\nimport InputError from '@/Components/InputError';\nimport InputLabel from '@/Components/InputLabel';\nimport PrimaryButton from '@/Components/PrimaryButton';\nimport TextInput from '@/Components/TextInput';\nimport { Head, Link, useForm } from '@inertiajs/react';\nimport { Divider } from 'antd';\nimport SecondaryButton from '@/Components/SecondaryButton';\nimport { useState } from 'react';\nimport Modal from '@/Components/Modal';\n// import BoxThree from '../../ReactFiber/Box.jsx'\n\nexport default function Login({ status, canResetPassword }) {\n    const { data, setData, post, processing, errors, reset } = useForm({\n        email: '',\n        password: '',\n        remember: false,\n    });\n\n    const [showModal, setShowModal] = useState(false);\n\n    useEffect(() => {\n        return () => {\n            reset('password');\n        };\n    }, []);\n\n    const submit = (e) => {\n        e.preventDefault();\n\n        post(route('login'));\n    };\n\n    return (\n        <GuestLayout>\n            <Head title=\"Log in\" />\n\n            {status && <div className=\"mb-4 font-medium text-sm text-green-600\">{status}</div>}\n\n            <form onSubmit={submit}>\n                <div>\n                    <div className='flex justify-between items-center'>\n                        <InputLabel htmlFor=\"email\" value=\"Email\" /> <a className='text-sm text-indigo-400 cursor-pointer' onClick={() => setShowModal(true)}>Click here for admin account</a>\n                    </div>\n\n                    <TextInput\n                        id=\"email\"\n                        type=\"email\"\n                        name=\"email\"\n                        value={data.email}\n                        className=\"mt-1 block w-full\"\n                        autoComplete=\"username\"\n                        isFocused={true}\n                        onChange={(e) => setData('email', e.target.value)}\n                    />\n\n                    <InputError message={errors.email} className=\"mt-2\" />\n                </div>\n\n                <div className=\"mt-4\">\n                    <InputLabel htmlFor=\"password\" value=\"Password\" />\n\n                    <TextInput\n                        id=\"password\"\n                        type=\"password\"\n                        name=\"password\"\n                        value={data.password}\n                        className=\"mt-1 block w-full\"\n                        autoComplete=\"current-password\"\n                        onChange={(e) => setData('password', e.target.value)}\n                    />\n\n                    <InputError message={errors.password} className=\"mt-2\" />\n                </div>\n\n                <div className=\"block mt-4\">\n                    <label className=\"flex items-center\">\n                        <Checkbox\n                            name=\"remember\"\n                            checked={data.remember}\n                            onChange={(e) => setData('remember', e.target.checked)}\n                        />\n                        <span className=\"ms-2 text-sm text-gray-600\">Remember me</span>\n                    </label>\n                </div>\n\n                <div className=\"mt-4\">\n\n\n                    {/* <PrimaryButton className=\"ms-4\" disabled={processing}>\n                        Register\n                    </PrimaryButton> */}\n\n                    <PrimaryButton className={`flex items-center justify-center w-full hover:bg-white hover:text-gray-800 hover:rounded-md border-gray-800 hover:border-gray-500 ${ processing ? 'cursor-progress' : ''}`} disabled={processing}>\n                        Log in\n                    </PrimaryButton>\n\n                    <div className=\"flex items-center justify-center mt-2\">\n                        {canResetPassword && (\n                            <Link\n                                href={route('password.request')}\n                                className=\"underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                            >\n                                Forgot your password?\n                            </Link>\n                        )}\n                    </div>\n\n\n                </div>\n                <Divider> OR </Divider>\n\n                <div className=\"flex items-center w-full justify-end mt-4\">\n                    <Link href={route('register')}  className=\"w-full\">\n                        <SecondaryButton className=\"flex items-center justify-center w-full hover:text-black hover:rounded-md hover:border-white-800\" disabled={processing}>\n                            Register\n                        </SecondaryButton>\n                    </Link>\n                </div>\n            </form>\n\n            <Modal show={showModal} onClose={() => setShowModal(false)} maxWidth=\"2xl\">\n                {/* Content of the modal */}\n                <div>\n                    <h1 className='bg-gray-800 p-4 text-white'>Admin Account</h1>\n                    <div className='p-4'>\n                        <div className='inline-flex'> <div className='text-md'>Username: </div> &nbsp; mavis@gmail.com </div>\n                        <p>Password: password</p>\n                    </div>\n                </div>\n            </Modal>\n\n            {/* <BoxThree /> */}\n\n        </GuestLayout>\n    );\n}\n"],"names":["Checkbox","className","props","jsx","Login","status","canResetPassword","data","setData","post","processing","errors","reset","useForm","showModal","setShowModal","useState","useEffect","submit","e","GuestLayout","Head","jsxs","InputLabel","TextInput","InputError","PrimaryButton","Link","Divider","SecondaryButton","Modal"],"mappings":"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"}