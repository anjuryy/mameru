{"version":3,"file":"Dashboard-C02WOliy.js","sources":["../../../resources/js/Components/DashboardCard.jsx","../../../resources/js/Components/Loader.jsx","../../../resources/js/Components/Weather.jsx","../../../resources/js/Components/Quotes.jsx","../../../resources/js/ReactFiber/Sun.jsx","../../../resources/js/ReactFiber/Moon.jsx","../../../resources/js/Pages/Dashboard.jsx"],"sourcesContent":["import { ArrowRightStartOnRectangleIcon, ChevronDoubleRightIcon } from \"@heroicons/react/24/outline\";\nimport { Link } from \"@inertiajs/react\";\nimport { Divider } from \"antd\";\nimport BoxThreeD from '../ReactFiber/Box.jsx';\n\n\n  export function DashboardCard({ link, title, icon, total }) {\n    return (\n        <div className=\"border border-gray-500 p-4 rounded-lg \">\n            <div className=\"flex justify-between items-center mb-3\">\n                <div>\n                    {/* <dt className=\"text-sm text-gray-800 w-10 h-10\"><BoxThreeD /></dt> */}\n                    <dt className=\"text-sm text-gray-800\">{ icon }</dt>\n                </div>\n                <div>\n                    <dt className=\"text-sm text-gray-500\">{ title }</dt>\n                    <dd className=\"flex justify-end text-lg\">{ total }</dd>\n                </div>\n            </div>\n            <hr />\n                <Link href={route(link)}>\n                    <div className=\"h-full text-gray-600 hover:text-gray-800 flex justify-end mt-2 text-xs\">\n                        {/* <ChevronDoubleRightIcon className=\"w-6 ml-2\"/> */}\n                        View More\n                    </div>\n                </Link>\n        </div>\n\n    )\n  }\n","import React from 'react';\n\nexport default function Loader() {\n  return (\n    <div\n    className=\"inline-block h-8 w-8 animate-spin rounded-full border-4 border-solid border-current border-r-transparent align-[-0.125em] motion-reduce:animate-[spin_1.5s_linear_infinite]\"\n    role=\"status\">\n    <span\n      className=\"!absolute !-m-px !h-px !w-px !overflow-hidden !whitespace-nowrap !border-0 !p-0 ![clip:rect(0,0,0,0)]\"\n    >Loading...</span>\n  </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useGLTF, useTexture } from '@react-three/drei';\nimport { Canvas } from '@react-three/fiber';\nimport Loader from './Loader';\n\nconst Weather = () => {\n    const [weatherData, setWeatherData] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const apiKey = '2PXAkT5XefUX4lhqjH0xcezqndpUvIaX'; // Replace with your API key\n        const apiUrl = `https://api.tomorrow.io/v4/weather/realtime?location=manila&apikey=2PXAkT5XefUX4lhqjH0xcezqndpUvIaX`;\n\n        fetch(apiUrl)\n        .then(response => {\n            if (!response.ok) {\n            throw new Error('Failed to fetch weather data');\n            }\n            return response.json();\n        })\n        .then(data => {\n            setWeatherData(data);\n            setLoading(false);\n        })\n        .catch(error => {\n            setError(error.message);\n            setLoading(false);\n        });\n    }, []);\n\n    if (loading) return <div className=\"text-center mt-8\"><Loader /> </div>;\n    if (error) return <div className=\"text-center mt-8 text-red-500\">Error: {error}</div>;\n\n    return (\n        <>\n            {weatherData && (\n                <div className=\"max-w-md mx-auto p-6 rounded-lg shadow-md mt-2\">\n                <h2 className=\"text-xl font-bold mb-4\">Weather in Manila, Philippines</h2>\n                <p className=\"text-lg mb-2\">Temperature: {weatherData.data.values.temperature}°C</p>\n                <p className=\"text-lg mb-2\">Humidity: {weatherData.data.values.humidity}%</p>\n                <p className=\"text-lg\">Wind Speed: {weatherData.data.values.windSpeed} m/s</p>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Weather;\n","import React, { useState, useEffect } from 'react';\nimport { IoBookOutline } from \"react-icons/io5\";\nimport Loader from './Loader';\n\nconst Quotes = () => {\n  const [quoteData, setQuoteData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const apiKey = '2PXAkT5XefUX4lhqjH0xcezqndpUvIaX'; // Replace with your API key\n    const apiUrl = `https://api.quotable.io/quotes/random`;\n\n    fetch(apiUrl)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to fetch weather data');\n        }\n        return response.json();\n      })\n      .then(data => {\n\n        setQuoteData(data);\n        setLoading(false);\n      })\n      .catch(error => {\n        setError(error.message);\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) return <div className=\"text-center mt-8\"><Loader /></div>;\n  if (error) return <div className=\"text-center mt-8 text-red-500\">Error: {error}</div>;\n\n  return (\n    <div className='mt-4'>\n        <div className=\"max-w-md mx-auto p-6 rounded-lg shadow-lg\">\n            <blockquote className=\"text-lg italic\">\n                \"{quoteData[0].content}\"\n            </blockquote>\n\n            <div className=\"mt-4 flex items-center justify-between text-sm \">\n                <div className=\"italic\">\n                    { quoteData[0].tags[0] }\n                </div>\n                <div className=\"flex items-center justify-end text-sm\">\n                        <IoBookOutline /> &nbsp; {quoteData[0].author}\n                </div>\n\n            </div>\n        </div>\n      {/* {weatherData && (\n        <div className=\"max-w-md mx-auto p-6 bg-gray-100 rounded-lg shadow-lg\">\n          <h2 className=\"text-xl font-bold mb-4\">Weather in Manila, Philippines</h2>\n          <p className=\"text-lg mb-2\">Temperature: {weatherData.data.values.temperature}°C</p>\n          <p className=\"text-lg mb-2\">Humidity: {weatherData.data.values.humidity}%</p>\n          <p className=\"text-lg\">Wind Speed: {weatherData.data.values.windSpeed} m/s</p>\n        </div>\n      )} */}\n    </div>\n  );\n};\n\nexport default Quotes;\n","import React from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { OrbitControls, Sky, useGLTF, useTexture } from '@react-three/drei';\n\nfunction Sun() {\n    return (\n        <Canvas\n            shadows\n            camera={ {\n                fov: 45\n            } }\n            className=\"h-40\"\n            // style={{ height: '15vh' }}\n        >\n            <OrbitControls />\n            <ambientLight intensity={1} />\n            <spotLight position={[10, 10, 10]} angle={0.15} penumbra={1} />\n            <Sky />\n            <SunModel />\n        </Canvas>\n    );\n}\n\nfunction SunModel() {\n    const sunModel = useGLTF('./blender/sun2/sun2.glb');\n    const sunTexture = useTexture('./blender/sun2/Sun2.jpg');\n    sunTexture.flipY = false;\n\n    return <>\n        <mesh geometry={ sunModel.nodes.Sphere001.geometry } scale={[0.1, 0.17, 0.1]} position-x={3.4} position-y={0.5}>\n            < meshBasicMaterial map={sunTexture} />\n        </mesh>\n    </>\n}\n\nexport default Sun;\n","import React from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { OrbitControls, Sky, Sparkles, useGLTF, useTexture } from '@react-three/drei';\n\nfunction Moon() {\n    return (\n        <Canvas\n            shadows\n            camera={ {\n                fov: 45\n            } }\n            className=\"h-40\"\n            style={{ background: 'url(./watercolour_night_sky_background_2607.jpg) no-repeat center fixed', backgroundSize: 'cover' }}\n        >\n            <OrbitControls />\n            <ambientLight intensity={10} />\n            <spotLight position={[10, 10, 10]} angle={0.15} penumbra={1} />\n            {/* <Sky /> */}\n            {/* <color args={ [ '#030202' ] } attach=\"background\" /> */}\n            <Sparkles\n                size={ 3 }\n                scale={ [ 7.5, 2, 4 ] }\n                position-y={ 0 }\n                speed={ 0.5 }\n                count={ 60 }\n                color={'#3390d2'}\n            />\n            <MoonModel />\n        </Canvas>\n    );\n}\n\nfunction MoonModel() {\n    const moonModel = useGLTF('./blender/sun2/moon2.glb');\n    const moonTexture = useTexture('./blender/sun2/Moon2.jpg');\n    moonTexture.flipY = false;\n\n    return <>\n        <mesh geometry={ moonModel.nodes.Sphere.geometry } scale={[0.72, 0.27, 0.1]} position-x={ 3.6 } position-y={0.5}>\n            < meshBasicMaterial map={moonTexture} />\n        </mesh>\n    </>\n}\n\nexport default Moon;\n","import Box from '@/Components/Box';\nimport BoxThreeD from '../ReactFiber/Box.jsx';\nimport { DashboardCard } from '@/Components/DashboardCard';\nimport AuthenticatedLayout from '@/Layouts/AuthenticatedLayout';\nimport { Head, usePage, router } from '@inertiajs/react';\nimport { useState } from 'react';\nimport { ClipboardDocumentCheckIcon, RectangleGroupIcon, SwatchIcon, UserGroupIcon, TicketIcon } from \"@heroicons/react/20/solid\";\nimport Weather from '@/Components/Weather.jsx';\nimport Quotes from '@/Components/Quotes.jsx';\nimport Sun from '@/ReactFiber/Sun.jsx';\nimport Moon from '@/ReactFiber/Moon.jsx';\n\nexport default function Dashboard({ auth }) {\n    const counts = usePage().props;\n\n    const [currentDate, setCurrentDate] = useState(new Date());\n\n    // Function to navigate to the previous month\n    const goToPreviousMonth = () => {\n        setCurrentDate(prevDate => new Date(prevDate.getFullYear(), prevDate.getMonth() - 1, 1));\n    };\n\n    // Function to navigate to the next month\n    const goToNextMonth = () => {\n        setCurrentDate(prevDate => new Date(prevDate.getFullYear(), prevDate.getMonth() + 1, 1));\n    };\n\n    // Get the number of days in the current month\n    const numDaysInMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0).getDate();\n\n    // Get the day of the week for the first day of the month\n    const firstDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1).getDay();\n\n    // Create an array of days of the week\n    const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n    // Create an array of dates for the current month\n    const datesOfMonth = Array.from({ length: numDaysInMonth }, (_, index) => index + 1);\n\n    const { todo_list } = usePage().props\n\n    const dayNumbers = todo_list.map(todoList => (\n        (new Date(todoList.deadline)).getDay()\n    ));\n\n    const now = new Date();\n\n    const currentHour = now.getHours();\n\n    return (\n        <AuthenticatedLayout\n            user={auth.user}\n            // header={<h2 className=\"font-semibold text-xl text-gray-800 leading-tight\">Dashboard</h2>}\n        >\n            <Head title=\"Dashboard\" />\n\n            <div className=\"py-6\">\n                <div className=\"mx-auto sm:px-6 lg:px-8\">\n                    <div className=\"bg-white overflow-hidden shadow-sm sm:rounded-lg\">\n                        <div className=\"grid lg:grid-cols-3 grid-cols-1 gap-3 p-4\">\n                            <div className=\"col-span-1\">\n                                {\n                                    auth.role != 1 ?\n                                    <div>\n                                        <div className='h-50'>\n                                            {\n                                                currentHour >= 18 ?\n                                                <Moon />\n                                                :\n                                                <Sun />\n\n                                            }\n                                        </div>\n\n                                        <Weather />\n                                        <Quotes />\n                                    </div>\n                                    :\n                                    <div className=\"grid grid-cols-1 w-full lg:grid-cols-2 gap-2\">\n                                        <Box>\n                                            <DashboardCard link={'users.index'} title={'Users'} icon={ <UserGroupIcon className=\"w-10 text-blue-500\"/> } total={ counts.user_count }/>\n                                        </Box>\n                                        <Box>\n                                            <DashboardCard link={'todo.index'} title={'Tasks'} icon={ <ClipboardDocumentCheckIcon className=\"w-10 text-red-500\"/> } total={ counts.task_count }/>\n                                        </Box>\n                                        <Box>\n                                            <DashboardCard link={'blog.index'} title={'Blogs'} icon={ <RectangleGroupIcon className=\"w-10 text-green-500\"/> } total={ counts.blog_count }/>\n                                        </Box>\n                                        <Box>\n                                            <DashboardCard link={'product.index'} title={'Products'} icon={ <SwatchIcon className=\"w-10 text-yellow-500\"/> } total={ counts.product_count }/>\n                                        </Box>\n                                        <Box>\n                                            <DashboardCard link={'ticket.index'} title={'Tickets'} icon={ <TicketIcon className=\"w-10 text-violet-500\"/> } total={ counts.report_count }/>\n                                        </Box>\n                                    </div>\n                                }\n\n\n\n                                <div className=\"w-10\">\n\n                                </div>\n\n                            </div>\n\n                            <div className=\"col-span-2\"> {/** hidden md:block */}\n                                <Box>\n                                    <div className=\"mx-auto p-4\">\n                                        <div className=\"border p-6 rounded-lg mb-4\">\n                                            <div className=\"flex justify-between mb-6\">\n                                            <button onClick={goToPreviousMonth}>&lt; Previous</button>\n                                            <h1 className=\"text-3xl font-bold\">{currentDate.toLocaleString('default', { month: 'long', year: 'numeric' })}</h1>\n                                            <button onClick={goToNextMonth}>Next &gt;</button>\n                                            </div>\n                                            <div className=\"grid grid-cols-7 gap-4\">\n                                            {daysOfWeek.map(day => (\n                                                <div key={day}>\n                                                    <div className=\"text-center font-bold text-lg xl:block hidden\">\n                                                        { day }\n                                                    </div>\n                                                    <div className=\"text-center font-bold text-lg xl:hidden block\">\n                                                        { day.split(\" \").map(word => word.charAt(0)) }\n                                                    </div>\n                                                </div>\n                                            ))}\n                                            {[...Array(firstDayOfMonth).keys()].map(() => (\n                                                <div key={`empty-${Math.random()}`} className=\"\"></div>\n                                            ))}\n                                            {datesOfMonth.map(date => (\n                                                <div key={date} className=\"text-right border rounded-lg p-4 text-xs lg:h-24 h-10\">\n\n                                                {date}\n                                                {\n                                                    todo_list.map(todoList => {\n                                                        const dateString = todoList.deadline;\n                                                        const dateParts = dateString.split(\"-\");\n                                                        const day = dateParts[2]; // Extract the day part\n                                                        const month = dateParts[1]; // Extract the day part\n                                                        const year = dateParts[0]; // Extract the day part\n\n                                                        const monthIndex = currentDate.getMonth();\n                                                        const monthString = String(monthIndex + 1).padStart(2, '0');\n\n                                                            return (\n                                                                <div key={ date }>\n                                                                    <div className=\"text-sm text-left mt-6 text-indigo-400\">\n                                                                        {\n                                                                            date == day && monthString == month && currentDate.getFullYear() == year\n                                                                                ?\n                                                                            <div>\n                                                                                <div className=\"group 2xl:block hidden\">\n                                                                                    { todoList.name }\n                                                                                    <div className=\"hidden group-hover:block absolute bg-white border border-gray-300 p-4 rounded-lg\">\n                                                                                        { todoList.task_desc == null ? 'No Description' : todoList.task_desc }\n                                                                                    </div>\n                                                                                </div>\n                                                                                <div className=\"group 2xl:hidden block\">\n                                                                                    <li className='text-gray-500'></li>\n                                                                                    <div className=\"hidden group-hover:block absolute bg-white border border-gray-300 p-4 rounded-lg\">\n                                                                                        { todoList.task_desc == null ? 'No Description' : todoList.task_desc }\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                                :\n                                                                            ''\n                                                                        }\n                                                                    </div>\n                                                                </div>\n                                                            );\n                                                        })\n                                                    }\n                                                </div>\n                                            ))}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Box>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </AuthenticatedLayout>\n    );\n}\n"],"names":["DashboardCard","link","title","icon","total","jsxs","jsx","Link","Loader","Weather","weatherData","setWeatherData","useState","loading","setLoading","error","setError","useEffect","response","data","Fragment","Weather$1","Quotes","quoteData","setQuoteData","IoBookOutline","Quotes$1","Sun","Canvas","OrbitControls","Sky","SunModel","sunModel","useGLTF","sunTexture","useTexture","Moon","Sparkles","MoonModel","moonModel","moonTexture","Dashboard","auth","counts","usePage","currentDate","setCurrentDate","goToPreviousMonth","prevDate","goToNextMonth","numDaysInMonth","firstDayOfMonth","daysOfWeek","datesOfMonth","_","index","todo_list","todoList","currentHour","AuthenticatedLayout","Head","Box","UserGroupIcon","ClipboardDocumentCheckIcon","RectangleGroupIcon","SwatchIcon","TicketIcon","day","word","date","dateParts","month","year","monthIndex","monthString"],"mappings":"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"}