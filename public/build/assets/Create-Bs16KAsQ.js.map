{"version":3,"file":"Create-Bs16KAsQ.js","sources":["../../../resources/js/Pages/Todo/Create.jsx"],"sourcesContent":["import Alert from '@/Components/Alert';\nimport InputError from '@/Components/InputError';\nimport InputLabel from '@/Components/InputLabel';\nimport PrimaryButton from '@/Components/PrimaryButton';\nimport SecondaryButton from '@/Components/SecondaryButton';\nimport TextInput from '@/Components/TextInput';\nimport AuthenticatedLayout from '@/Layouts/AuthenticatedLayout';\nimport { Head, Link, useForm, usePage } from '@inertiajs/react';\nimport { useEffect, useState } from 'react';\n\nexport default function Create({ auth }) {\n\n    const { data, setData, post, processing, errors, reset } = useForm({\n        name: '',\n        task_desc: '',\n        deadline: ''\n    });\n\n    const submit = (e) => {\n        e.preventDefault();\n\n        post(route('todo.store'));\n    };\n\n    return (\n        <AuthenticatedLayout\n            user={auth.user}\n            // header={<h2 className=\"font-semibold text-xl text-gray-800 leading-tight\">To Do List</h2>}\n        >\n            <Head title=\"Task - Create\" />\n\n            <div className=\"py-12\">\n                <div className=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n                    <div className=\"bg-white overflow-hidden shadow-sm sm:rounded-lg p-6\">\n                    <form onSubmit={submit}>\n                        <div>\n                            <InputLabel htmlFor=\"name\" value=\"Task\" />\n\n                            <TextInput\n                                id=\"name\"\n                                name=\"name\"\n                                value={data.name}\n                                className=\"mt-1 block w-full\"\n                                autoComplete=\"name\"\n                                isFocused={true}\n                                onChange={(e) => setData('name', e.target.value)}\n                                required\n                            />\n\n                            <InputError message={errors.name} className=\"mt-2\" />\n                        </div>\n\n                        <div className=\"mt-4\">\n                            <InputLabel htmlFor=\"task_desc\" value=\"Description\" />\n\n                            <TextInput\n                                id=\"task_desc\"\n                                name=\"task_desc\"\n                                value={data.task_desc}\n                                className=\"mt-1 block w-full\"\n                                onChange={(e) => setData('task_desc', e.target.value)}\n                            />\n\n                            <InputError message={errors.task_desc} className=\"mt-2\" />\n                        </div>\n\n                        <div className=\"mt-4\">\n                            <InputLabel htmlFor=\"deadline\" value=\"Deadline\" />\n\n                            <TextInput\n                                id=\"deadline\"\n                                name=\"deadline\"\n                                type=\"date\"\n                                value={data.deadline}\n                                className=\"mt-1 block w-full\"\n                                onChange={(e) => setData('deadline', e.target.value)}\n                            />\n\n                            <InputError message={errors.deadline} className=\"mt-2\" />\n                        </div>\n\n                        <div className=\"flex items-center justify-end mt-4\">\n\n                            <Link href={route('todo.index')} >\n                                <SecondaryButton className=\"ms-4\" disabled={processing}>\n                                    Back\n                                </SecondaryButton>\n                            </Link>\n\n                            <PrimaryButton className=\"ms-4\" disabled={processing}>\n                                Submit\n                            </PrimaryButton>\n                        </div>\n                    </form>\n                    </div>\n                </div>\n            </div>\n        </AuthenticatedLayout>\n    );\n}\n"],"names":["Create","auth","data","setData","post","processing","errors","reset","useForm","submit","e","jsxs","AuthenticatedLayout","jsx","Head","InputLabel","TextInput","InputError","Link","SecondaryButton","PrimaryButton"],"mappings":"miDAUwB,SAAAA,GAAO,CAAE,KAAAC,GAAQ,CAE/B,KAAA,CAAE,KAAAC,EAAM,QAAAC,EAAS,KAAAC,EAAM,WAAAC,EAAY,OAAAC,EAAQ,MAAAC,GAAUC,EAAQ,CAC/D,KAAM,GACN,UAAW,GACX,SAAU,EAAA,CACb,EAEKC,EAAUC,GAAM,CAClBA,EAAE,eAAe,EAEZN,EAAA,MAAM,YAAY,CAAC,CAAA,EAIxB,OAAAO,EAAA,KAACC,EAAA,CACG,KAAMX,EAAK,KAGX,SAAA,CAACY,EAAAA,IAAAC,EAAA,CAAK,MAAM,eAAgB,CAAA,EAE3BD,MAAA,MAAA,CAAI,UAAU,QACX,eAAC,MAAI,CAAA,UAAU,oCACX,SAAAA,EAAA,IAAC,OAAI,UAAU,uDACf,SAACF,OAAA,OAAA,CAAK,SAAUF,EACZ,SAAA,CAAAE,OAAC,MACG,CAAA,SAAA,CAAAE,EAAA,IAACE,EAAW,CAAA,QAAQ,OAAO,MAAM,OAAO,EAExCF,EAAA,IAACG,EAAA,CACG,GAAG,OACH,KAAK,OACL,MAAOd,EAAK,KACZ,UAAU,oBACV,aAAa,OACb,UAAW,GACX,SAAWQ,GAAMP,EAAQ,OAAQO,EAAE,OAAO,KAAK,EAC/C,SAAQ,EAAA,CACZ,QAECO,EAAW,CAAA,QAASX,EAAO,KAAM,UAAU,OAAO,CAAA,EACvD,EAEAK,EAAAA,KAAC,MAAI,CAAA,UAAU,OACX,SAAA,CAAAE,EAAA,IAACE,EAAW,CAAA,QAAQ,YAAY,MAAM,cAAc,EAEpDF,EAAA,IAACG,EAAA,CACG,GAAG,YACH,KAAK,YACL,MAAOd,EAAK,UACZ,UAAU,oBACV,SAAWQ,GAAMP,EAAQ,YAAaO,EAAE,OAAO,KAAK,CAAA,CACxD,QAECO,EAAW,CAAA,QAASX,EAAO,UAAW,UAAU,OAAO,CAAA,EAC5D,EAEAK,EAAAA,KAAC,MAAI,CAAA,UAAU,OACX,SAAA,CAAAE,EAAA,IAACE,EAAW,CAAA,QAAQ,WAAW,MAAM,WAAW,EAEhDF,EAAA,IAACG,EAAA,CACG,GAAG,WACH,KAAK,WACL,KAAK,OACL,MAAOd,EAAK,SACZ,UAAU,oBACV,SAAWQ,GAAMP,EAAQ,WAAYO,EAAE,OAAO,KAAK,CAAA,CACvD,QAECO,EAAW,CAAA,QAASX,EAAO,SAAU,UAAU,OAAO,CAAA,EAC3D,EAEAK,EAAAA,KAAC,MAAI,CAAA,UAAU,qCAEX,SAAA,CAAAE,EAAA,IAACK,EAAK,CAAA,KAAM,MAAM,YAAY,EAC1B,SAAAL,EAAA,IAACM,EAAgB,CAAA,UAAU,OAAO,SAAUd,EAAY,SAAA,MAExD,CAAA,EACJ,QAECe,EAAc,CAAA,UAAU,OAAO,SAAUf,EAAY,SAEtD,SAAA,CAAA,EACJ,CAAA,EACJ,CAAA,CACA,CACJ,CAAA,EACJ,CAAA,CAAA,CAAA,CAGZ"}