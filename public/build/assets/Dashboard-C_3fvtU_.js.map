{"version":3,"file":"Dashboard-C_3fvtU_.js","sources":["../../../resources/js/Components/DashboardCard.jsx","../../../resources/js/Pages/Dashboard.jsx"],"sourcesContent":["import { ArrowRightStartOnRectangleIcon, ChevronDoubleRightIcon } from \"@heroicons/react/24/outline\";\nimport { Link } from \"@inertiajs/react\";\nimport { Divider } from \"antd\";\nimport BoxThreeD from '../ReactFiber/Box.jsx';\n\n\n  export function DashboardCard({ link, title, icon, total }) {\n    return (\n        <div className=\"border border-gray-500 p-4 rounded-lg \">\n            <div className=\"flex justify-between items-center mb-3\">\n                <div>\n                    {/* <dt className=\"text-sm text-gray-800 w-10 h-10\"><BoxThreeD /></dt> */}\n                    <dt className=\"text-sm text-gray-800\">{ icon }</dt>\n                </div>\n                <div>\n                    <dt className=\"text-sm text-gray-500\">{ title }</dt>\n                    <dd className=\"flex justify-end text-lg\">{ total }</dd>\n                </div>\n            </div>\n            <hr />\n                <Link href={route(link)}>\n                    <div className=\"h-full text-gray-600 hover:text-gray-800 flex justify-end mt-2\">\n                        {/* <ChevronDoubleRightIcon className=\"w-6 ml-2\"/> */}\n                        View More\n                    </div>\n                </Link>\n        </div>\n\n    )\n  }\n","import Box from '@/Components/Box';\nimport BoxThreeD from '../ReactFiber/Box.jsx';\nimport { DashboardCard } from '@/Components/DashboardCard';\nimport AuthenticatedLayout from '@/Layouts/AuthenticatedLayout';\nimport { Head, usePage } from '@inertiajs/react';\nimport { useState } from 'react';\nimport { ClipboardDocumentCheckIcon, RectangleGroupIcon, SwatchIcon, UserGroupIcon } from \"@heroicons/react/20/solid\";\n\nexport default function Dashboard({ auth }) {\n    const counts = usePage().props;\n    const [currentDate, setCurrentDate] = useState(new Date());\n\n    // console.log(counts);\n\n    // Function to navigate to the previous month\n    const goToPreviousMonth = () => {\n        setCurrentDate(prevDate => new Date(prevDate.getFullYear(), prevDate.getMonth() - 1, 1));\n    };\n\n    // Function to navigate to the next month\n    const goToNextMonth = () => {\n        setCurrentDate(prevDate => new Date(prevDate.getFullYear(), prevDate.getMonth() + 1, 1));\n    };\n\n    // Get the number of days in the current month\n    const numDaysInMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0).getDate();\n\n    // Get the day of the week for the first day of the month\n    const firstDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1).getDay();\n\n    // Create an array of days of the week\n    const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n    // Create an array of dates for the current month\n    const datesOfMonth = Array.from({ length: numDaysInMonth }, (_, index) => index + 1);\n\n    const { todo_list } = usePage().props\n\n    const dayNumbers = todo_list.map(todoList => (\n        (new Date(todoList.deadline)).getDay()\n    ));\n\n    return (\n        <AuthenticatedLayout\n            user={auth.user}\n            // header={<h2 className=\"font-semibold text-xl text-gray-800 leading-tight\">Dashboard</h2>}\n        >\n            <Head title=\"Dashboard\" />\n\n            <div className=\"py-12\">\n                <div className=\"mx-auto sm:px-6 lg:px-8\">\n                    <div className=\"bg-white overflow-hidden shadow-sm sm:rounded-lg\">\n                        <div className=\"grid lg:grid-cols-3 grid-cols-1 gap-3 p-4\">\n                            <div className=\"col-span-1\">\n                                <div className=\"grid grid-cols-1 w-full lg:grid-cols-2 gap-2\">\n                                    <Box>\n                                        <DashboardCard link={'users.index'} title={'Users'} icon={ <UserGroupIcon className=\"w-10 text-blue-500\"/> } total={ counts.user_count }/>\n                                    </Box>\n                                    <Box>\n                                        <DashboardCard link={'todo.index'} title={'Tasks'} icon={ <ClipboardDocumentCheckIcon className=\"w-10 text-red-500\"/> } total={ counts.task_count }/>\n                                    </Box>\n                                    <Box>\n                                        <DashboardCard link={'blog.index'} title={'Blogs'} icon={ <RectangleGroupIcon className=\"w-10 text-green-500\"/> } total={ counts.blog_count }/>\n                                    </Box>\n                                    <Box>\n                                        <DashboardCard link={'product.index'} title={'Products'} icon={ <SwatchIcon className=\"w-10 text-yellow-500\"/> } total={ counts.product_count }/>\n                                    </Box>\n                                </div>\n                                \n                                <div className=\"w-10\">\n\n                                </div>\n\n                            </div>\n\n                            <div className=\"col-span-2\"> {/** hidden md:block */}\n                                <Box>\n                                    <div className=\"mx-auto p-4\">\n                                        <div className=\"border p-6 rounded-lg mb-4\">\n                                            <div className=\"flex justify-between mb-6\">\n                                            <button onClick={goToPreviousMonth}>&lt; Previous</button>\n                                            <h1 className=\"text-3xl font-bold\">{currentDate.toLocaleString('default', { month: 'long', year: 'numeric' })}</h1>\n                                            <button onClick={goToNextMonth}>Next &gt;</button>\n                                            </div>\n                                            <div className=\"grid grid-cols-7 gap-4\">\n                                            {daysOfWeek.map(day => (\n                                                <div key={day}>\n                                                    <div className=\"text-center font-bold text-lg xl:block hidden\">\n                                                        { day }\n                                                    </div>\n                                                    <div className=\"text-center font-bold text-lg xl:hidden block\">\n                                                        { day.split(\" \").map(word => word.charAt(0)) }\n                                                    </div>\n                                                </div>\n                                            ))}\n                                            {[...Array(firstDayOfMonth).keys()].map(() => (\n                                                <div key={`empty-${Math.random()}`} className=\"\"></div>\n                                            ))}\n                                            {datesOfMonth.map(date => (\n                                                <div key={date} className=\"text-right border rounded-lg p-4 text-xs lg:h-24 h-10\">\n\n                                                {date}\n                                                {\n                                                    todo_list.map(todoList => {\n                                                        const dateString = todoList.deadline;\n                                                        const dateParts = dateString.split(\"-\");\n                                                        const day = dateParts[2]; // Extract the day part\n                                                        const month = dateParts[1]; // Extract the day part\n                                                        const year = dateParts[0]; // Extract the day part\n\n                                                        const monthIndex = currentDate.getMonth();\n                                                        const monthString = String(monthIndex + 1).padStart(2, '0');\n\n                                                            return (\n                                                                <div key={ date }>\n                                                                    <div className=\"text-sm text-left mt-6 text-indigo-400\">\n                                                                        {\n                                                                            date == day && monthString == month && currentDate.getFullYear() == year\n                                                                                ?\n                                                                            <div>\n                                                                                <div className=\"group 2xl:block hidden\">\n                                                                                    { todoList.name }\n                                                                                    <div className=\"hidden group-hover:block absolute bg-white border border-gray-300 p-4 rounded-lg\">\n                                                                                        { todoList.task_desc == null ? 'No Description' : todoList.task_desc }\n                                                                                    </div>\n                                                                                </div>\n                                                                                <div className=\"group 2xl:hidden block\">\n                                                                                    <li className='text-gray-500'></li>\n                                                                                    <div className=\"hidden group-hover:block absolute bg-white border border-gray-300 p-4 rounded-lg\">\n                                                                                        { todoList.task_desc == null ? 'No Description' : todoList.task_desc }\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                                :\n                                                                            ''\n                                                                        }\n                                                                    </div>\n                                                                </div>\n                                                            );\n                                                        })\n                                                    }\n                                                </div>\n                                            ))}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Box>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </AuthenticatedLayout>\n    );\n}\n"],"names":["DashboardCard","link","title","icon","total","jsxs","jsx","Link","Dashboard","auth","counts","usePage","currentDate","setCurrentDate","useState","goToPreviousMonth","prevDate","goToNextMonth","numDaysInMonth","firstDayOfMonth","daysOfWeek","datesOfMonth","_","index","todo_list","todoList","AuthenticatedLayout","Head","Box","UserGroupIcon","ClipboardDocumentCheckIcon","RectangleGroupIcon","SwatchIcon","day","word","date","dateParts","month","year","monthIndex","monthString"],"mappings":"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"}