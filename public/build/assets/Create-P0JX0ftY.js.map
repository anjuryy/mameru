{"version":3,"file":"Create-P0JX0ftY.js","sources":["../../../resources/js/Pages/Section/Create.jsx"],"sourcesContent":["import InputError from '@/Components/InputError';\nimport InputLabel from '@/Components/InputLabel';\nimport PrimaryButton from '@/Components/PrimaryButton';\nimport SecondaryButton from '@/Components/SecondaryButton';\nimport TextInput from '@/Components/TextInput';\nimport AuthenticatedLayout from '@/Layouts/AuthenticatedLayout';\nimport { PhotoIcon } from '@heroicons/react/20/solid';\nimport { Head, Link, useForm, usePage } from '@inertiajs/react';\nimport { useEffect } from 'react';\n\nexport default function Create({ auth }) {\n    const { category } = usePage().props\n\n    const { data, setData, post, processing, errors, reset } = useForm({\n        category_id: '',\n        name: '',\n    });\n\n    const submit = (e) => {\n        e.preventDefault();\n\n        post(route('section.store'));\n    };\n\n    return (\n        <AuthenticatedLayout\n            user={auth.user}\n            // header={<h2 className=\"font-semibold text-xl text-gray-800 leading-tight\">To Do List</h2>}\n        >\n            <Head title=\"Section - Create\" />\n\n            <div className=\"py-12\">\n                <div className=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n                    <div className=\"bg-white overflow-hidden shadow-sm sm:rounded-lg p-6\">\n                    <form onSubmit={submit} encType=\"multipart/form-data\">\n                        <div>\n                            <InputLabel htmlFor=\"category_id\" value=\"Categories\" />\n\n                            <select\n                                id=\"category_id\"\n                                name=\"category_id\"\n                                value={data.category_id}\n                                className=\"mt-1 block w-full border-gray-300 focus:border-indigo-500 focus:ring-indigo-500 rounded-md shadow-sm \"\n                                autoComplete=\"category_id\"\n                                onChange={(e) => setData('category_id', e.target.value)}\n                                required\n                            >\n                                <option> Select a category ...</option>\n                                {\n                                    category.map(data => (\n                                        <option key={ data.id } value={ data.id }> { data.name } </option>\n                                    ))\n                                }\n                            </select>\n\n                            <InputError message={errors.category_id} className=\"mt-2\" />\n                        </div>\n\n                        <div className=\"mt-2\">\n                            <InputLabel htmlFor=\"name\" value=\"Name\" />\n\n                            <TextInput\n                                id=\"name\"\n                                name=\"name\"\n                                value={data.name}\n                                className=\"mt-1 block w-full\"\n                                autoComplete=\"name\"\n                                onChange={(e) => setData('name', e.target.value)}\n                                required\n                            />\n\n                            <InputError message={errors.name} className=\"mt-2\" />\n                        </div>\n\n                        <div className=\"flex items-center justify-end mt-4\">\n\n                            <Link href={route('management.index')} >\n                                <SecondaryButton className=\"ms-4\" disabled={processing}>\n                                    Back\n                                </SecondaryButton>\n                            </Link>\n\n                            <PrimaryButton className=\"ms-4\" disabled={processing}>\n                                Submit\n                            </PrimaryButton>\n                        </div>\n                    </form>\n                    </div>\n                </div>\n            </div>\n        </AuthenticatedLayout>\n    );\n}\n"],"names":["Create","auth","category","usePage","data","setData","post","processing","errors","reset","useForm","submit","e","jsxs","AuthenticatedLayout","jsx","Head","InputLabel","InputError","TextInput","Link","SecondaryButton","PrimaryButton"],"mappings":"inDAUwB,SAAAA,GAAO,CAAE,KAAAC,GAAQ,CACrC,KAAM,CAAE,SAAAC,CAAA,EAAaC,EAAA,EAAU,MAEzB,CAAE,KAAAC,EAAM,QAAAC,EAAS,KAAAC,EAAM,WAAAC,EAAY,OAAAC,EAAQ,MAAAC,GAAUC,EAAQ,CAC/D,YAAa,GACb,KAAM,EAAA,CACT,EAEKC,EAAUC,GAAM,CAClBA,EAAE,eAAe,EAEZN,EAAA,MAAM,eAAe,CAAC,CAAA,EAI3B,OAAAO,EAAA,KAACC,EAAA,CACG,KAAMb,EAAK,KAGX,SAAA,CAACc,EAAAA,IAAAC,EAAA,CAAK,MAAM,kBAAmB,CAAA,QAE9B,MAAI,CAAA,UAAU,QACX,SAAAD,EAAA,IAAC,OAAI,UAAU,oCACX,SAACA,EAAAA,IAAA,MAAA,CAAI,UAAU,uDACf,SAAAF,EAAAA,KAAC,QAAK,SAAUF,EAAQ,QAAQ,sBAC5B,SAAA,CAAAE,OAAC,MACG,CAAA,SAAA,CAAAE,EAAA,IAACE,EAAW,CAAA,QAAQ,cAAc,MAAM,aAAa,EAErDJ,EAAA,KAAC,SAAA,CACG,GAAG,cACH,KAAK,cACL,MAAOT,EAAK,YACZ,UAAU,wGACV,aAAa,cACb,SAAWQ,GAAMP,EAAQ,cAAeO,EAAE,OAAO,KAAK,EACtD,SAAQ,GAER,SAAA,CAAAG,EAAAA,IAAC,UAAO,SAAsB,wBAAA,CAAA,EAE1Bb,EAAS,IAAIE,UACR,SAAuB,CAAA,MAAQA,EAAK,GAAK,SAAA,CAAA,IAAGA,EAAK,KAAM,GAAA,GAA1CA,EAAK,EAAsC,CAC5D,CAAA,CAAA,CAET,QAECc,EAAW,CAAA,QAASV,EAAO,YAAa,UAAU,OAAO,CAAA,EAC9D,EAEAK,EAAAA,KAAC,MAAI,CAAA,UAAU,OACX,SAAA,CAAAE,EAAA,IAACE,EAAW,CAAA,QAAQ,OAAO,MAAM,OAAO,EAExCF,EAAA,IAACI,EAAA,CACG,GAAG,OACH,KAAK,OACL,MAAOf,EAAK,KACZ,UAAU,oBACV,aAAa,OACb,SAAWQ,GAAMP,EAAQ,OAAQO,EAAE,OAAO,KAAK,EAC/C,SAAQ,EAAA,CACZ,QAECM,EAAW,CAAA,QAASV,EAAO,KAAM,UAAU,OAAO,CAAA,EACvD,EAEAK,EAAAA,KAAC,MAAI,CAAA,UAAU,qCAEX,SAAA,CAAAE,EAAA,IAACK,EAAK,CAAA,KAAM,MAAM,kBAAkB,EAChC,SAAAL,EAAA,IAACM,EAAgB,CAAA,UAAU,OAAO,SAAUd,EAAY,SAAA,MAExD,CAAA,EACJ,QAECe,EAAc,CAAA,UAAU,OAAO,SAAUf,EAAY,SAEtD,SAAA,CAAA,EACJ,CAAA,EACJ,CAAA,CACA,CACJ,CAAA,EACJ,CAAA,CAAA,CAAA,CAGZ"}