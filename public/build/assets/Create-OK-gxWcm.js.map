{"version":3,"file":"Create-OK-gxWcm.js","sources":["../../../resources/js/Pages/Todo/Create.jsx"],"sourcesContent":["import Alert from '@/Components/Alert';\nimport InputError from '@/Components/InputError';\nimport InputLabel from '@/Components/InputLabel';\nimport PrimaryButton from '@/Components/PrimaryButton';\nimport SecondaryButton from '@/Components/SecondaryButton';\nimport TextInput from '@/Components/TextInput';\nimport AuthenticatedLayout from '@/Layouts/AuthenticatedLayout';\nimport { Head, Link, useForm, usePage } from '@inertiajs/react';\nimport { useEffect, useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nexport default function Create({ auth }) {\n    const [startDate, setStartDate] = useState(new Date());\n\n    const { data, setData, post, processing, errors, reset } = useForm({\n        name: '',\n        task_desc: '',\n        deadline: startDate\n    });\n\n    const handleChange = (selectedDate) => {\n        setStartDate(selectedDate);\n        const adjustedDate = new Date(selectedDate.getTime() - selectedDate.getTimezoneOffset() * 60000);\n        data.deadline = adjustedDate\n    };\n\n    const minDateTime = new Date();\n\n    const submit = (e) => {\n        e.preventDefault();\n        // console.log(data.deadline);\n        post(route('todo.store'));\n    };\n\n    return (\n        <AuthenticatedLayout\n            user={auth.user}\n            // header={<h2 className=\"font-semibold text-xl text-gray-800 leading-tight\">To Do List</h2>}\n        >\n            <Head title=\"Task - Create\" />\n\n            <div className=\"py-12\">\n                <div className=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n                    <div className=\"bg-white overflow-hidden shadow-sm sm:rounded-lg p-6\">\n                    <form onSubmit={submit}>\n                        <div>\n                            <InputLabel htmlFor=\"name\" value=\"Task\" />\n\n                            <TextInput\n                                id=\"name\"\n                                name=\"name\"\n                                value={data.name}\n                                className=\"mt-1 block w-full\"\n                                autoComplete=\"name\"\n                                isFocused={true}\n                                onChange={(e) => setData('name', e.target.value)}\n                                required\n                            />\n\n                            <InputError message={errors.name} className=\"mt-2\" />\n                        </div>\n\n                        <div className=\"mt-4\">\n                            <InputLabel htmlFor=\"task_desc\" value=\"Description\" />\n\n                            <TextInput\n                                id=\"task_desc\"\n                                name=\"task_desc\"\n                                value={data.task_desc}\n                                className=\"mt-1 block w-full\"\n                                onChange={(e) => setData('task_desc', e.target.value)}\n                            />\n\n                            <InputError message={errors.task_desc} className=\"mt-2\" />\n                        </div>\n\n                        <div className=\"mt-4\">\n                            <InputLabel htmlFor=\"deadline\" className=\"text-sm\" value=\"Deadline\"/>\n\n                            <DatePicker\n                                name=\"deadline\"\n                                selected={startDate}\n                                onChange={handleChange}\n                                showTimeSelect\n                                timeFormat=\"HH:mm\"\n                                timeIntervals={15} // Optionally, you can set time intervals\n                                dateFormat=\"MMMM d, yyyy h:mm aa\" // Displayed format (optional)\n                                className=\"border border-gray-300 rounded-md px-4 py-2 focus:outline-none focus:border-blue-400\"\n                            />\n\n                        </div>\n\n                        {/* <div className=\"mt-4\">\n\n                            <InputLabel htmlFor=\"deadline\" value=\"Deadline\" />\n\n                            <TextInput\n                                id=\"deadline\"\n                                name=\"deadline\"\n                                type=\"time\"\n                                value={data.deadline}\n                                className=\"mt-1 block w-full\"\n                                onChange={(e) => setData('deadline', e.target.value)}\n                            />\n\n                            <InputError message={errors.deadline} className=\"mt-2\" />\n                        </div> */}\n\n                        <div className=\"flex items-center justify-end mt-4\">\n\n                            <Link href={route('todo.index')} >\n                                <SecondaryButton className=\"ms-4\" disabled={processing}>\n                                    Back\n                                </SecondaryButton>\n                            </Link>\n\n                            <PrimaryButton className=\"ms-4\" disabled={processing}>\n                                Submit\n                            </PrimaryButton>\n                        </div>\n                    </form>\n                    </div>\n                </div>\n            </div>\n        </AuthenticatedLayout>\n    );\n}\n"],"names":["Create","auth","startDate","setStartDate","useState","data","setData","post","processing","errors","reset","useForm","handleChange","selectedDate","adjustedDate","submit","e","jsxs","AuthenticatedLayout","jsx","Head","InputLabel","TextInput","InputError","DatePicker","Link","SecondaryButton","PrimaryButton"],"mappings":"swDAYwB,SAAAA,GAAO,CAAE,KAAAC,GAAQ,CACrC,KAAM,CAACC,EAAWC,CAAY,EAAIC,EAAAA,SAAS,IAAI,IAAM,EAE/C,CAAE,KAAAC,EAAM,QAAAC,EAAS,KAAAC,EAAM,WAAAC,EAAY,OAAAC,EAAQ,MAAAC,GAAUC,EAAQ,CAC/D,KAAM,GACN,UAAW,GACX,SAAUT,CAAA,CACb,EAEKU,EAAgBC,GAAiB,CACnCV,EAAaU,CAAY,EACnB,MAAAC,EAAe,IAAI,KAAKD,EAAa,QAAY,EAAAA,EAAa,oBAAsB,GAAK,EAC/FR,EAAK,SAAWS,CAAA,EAKdC,EAAUC,GAAM,CAClBA,EAAE,eAAe,EAEZT,EAAA,MAAM,YAAY,CAAC,CAAA,EAIxB,OAAAU,EAAA,KAACC,EAAA,CACG,KAAMjB,EAAK,KAGX,SAAA,CAACkB,EAAAA,IAAAC,EAAA,CAAK,MAAM,eAAgB,CAAA,EAE3BD,MAAA,MAAA,CAAI,UAAU,QACX,eAAC,MAAI,CAAA,UAAU,oCACX,SAAAA,EAAA,IAAC,OAAI,UAAU,uDACf,SAACF,OAAA,OAAA,CAAK,SAAUF,EACZ,SAAA,CAAAE,OAAC,MACG,CAAA,SAAA,CAAAE,EAAA,IAACE,EAAW,CAAA,QAAQ,OAAO,MAAM,OAAO,EAExCF,EAAA,IAACG,EAAA,CACG,GAAG,OACH,KAAK,OACL,MAAOjB,EAAK,KACZ,UAAU,oBACV,aAAa,OACb,UAAW,GACX,SAAWW,GAAMV,EAAQ,OAAQU,EAAE,OAAO,KAAK,EAC/C,SAAQ,EAAA,CACZ,QAECO,EAAW,CAAA,QAASd,EAAO,KAAM,UAAU,OAAO,CAAA,EACvD,EAEAQ,EAAAA,KAAC,MAAI,CAAA,UAAU,OACX,SAAA,CAAAE,EAAA,IAACE,EAAW,CAAA,QAAQ,YAAY,MAAM,cAAc,EAEpDF,EAAA,IAACG,EAAA,CACG,GAAG,YACH,KAAK,YACL,MAAOjB,EAAK,UACZ,UAAU,oBACV,SAAWW,GAAMV,EAAQ,YAAaU,EAAE,OAAO,KAAK,CAAA,CACxD,QAECO,EAAW,CAAA,QAASd,EAAO,UAAW,UAAU,OAAO,CAAA,EAC5D,EAEAQ,EAAAA,KAAC,MAAI,CAAA,UAAU,OACX,SAAA,CAAAE,MAACE,GAAW,QAAQ,WAAW,UAAU,UAAU,MAAM,WAAU,EAEnEF,EAAA,IAACK,EAAA,CACG,KAAK,WACL,SAAUtB,EACV,SAAUU,EACV,eAAc,GACd,WAAW,QACX,cAAe,GACf,WAAW,uBACX,UAAU,sFAAA,CACd,CAAA,EAEJ,EAkBAK,EAAAA,KAAC,MAAI,CAAA,UAAU,qCAEX,SAAA,CAAAE,EAAA,IAACM,EAAK,CAAA,KAAM,MAAM,YAAY,EAC1B,SAAAN,EAAA,IAACO,EAAgB,CAAA,UAAU,OAAO,SAAUlB,EAAY,SAAA,MAExD,CAAA,EACJ,QAECmB,EAAc,CAAA,UAAU,OAAO,SAAUnB,EAAY,SAEtD,SAAA,CAAA,EACJ,CAAA,EACJ,CAAA,CACA,CACJ,CAAA,EACJ,CAAA,CAAA,CAAA,CAGZ"}