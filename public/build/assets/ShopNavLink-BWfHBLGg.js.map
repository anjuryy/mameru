{"version":3,"file":"ShopNavLink-BWfHBLGg.js","sources":["../../../resources/js/Pages/Shop/ShopNavLink.jsx"],"sourcesContent":["\nimport { Fragment, useState } from 'react'\nimport { Dialog, Popover, Tab, Transition } from '@headlessui/react'\nimport { Bars3Icon, MagnifyingGlassIcon, ShoppingBagIcon, XMarkIcon } from '@heroicons/react/24/outline'\nimport AuthenticatedLayout from '@/Layouts/AuthenticatedLayout'\nimport { Head, Link, usePage } from '@inertiajs/react'\nimport ProductList from './ProductList'\nimport ShoppingCart from './ShoppingCart'\nimport Search from './Search'\nimport { useEffect } from 'react'\n\n  function classNames(...classes) {\n    return classes.filter(Boolean).join(' ')\n  }\n\nexport default function ShopNavLink({ auth, category, products, purchases, userCurrencySetting, setFilteredData })\n{\n    const [open, setOpen] = useState(false)\n    const [openCart, setOpenCart] = useState(false)\n\n    const [isOpen, setIsOpen] = useState(false);\n    const [selectedCurrency, setSelectedCurrency] = useState('USD');\n\n    const togglePopover = () => {\n        setIsOpen(!isOpen);\n    };\n\n    const handleCurrencySelect = (currency) => {\n        setSelectedCurrency(currency);\n        setIsOpen(false); // Close the popover after selecting a currency\n    };\n\n    const getFlagImageUrl = (currency) => {\n        // You can replace this switch statement with a mapping of currency codes to flag image URLs\n        switch (currency) {\n          case 'USD':\n            return 'https://tailwindui.com/img/flags/flag-united-states.svg';\n          case 'EUR':\n            return 'https://tailwindui.com/img/flags/flag-european-union.svg';\n          case 'GBP':\n            return 'https://tailwindui.com/img/flags/flag-united-kingdom.svg';\n          case 'JPY':\n            return 'https://flagicons.lipis.dev/flags/4x3/jp.svg';\n          default:\n            return ''; // Return an empty string for unsupported currencies\n        }\n    };\n\n    return(\n        <div>\n            <Head title=\"Shop\" />\n\n            <div className=\"bg-white\">\n                {/* Mobile menu */}\n                <Transition.Root show={open} as={ Fragment }>\n                    <Dialog as=\"div\" className=\"relative z-40 lg:hidden\" onClose={setOpen}>\n                    <Transition.Child\n                        as={Fragment}\n                        enter=\"transition-opacity ease-linear duration-300\"\n                        enterFrom=\"opacity-0\"\n                        enterTo=\"opacity-100\"\n                        leave=\"transition-opacity ease-linear duration-300\"\n                        leaveFrom=\"opacity-100\"\n                        leaveTo=\"opacity-0\"\n                    >\n                        <div className=\"fixed inset-0 bg-black bg-opacity-25\" />\n                    </Transition.Child>\n\n                    <div className=\"fixed inset-0 z-40 flex\">\n                        <Transition.Child\n                        as={Fragment}\n                        enter=\"transition ease-in-out duration-300 transform\"\n                        enterFrom=\"-translate-x-full\"\n                        enterTo=\"translate-x-0\"\n                        leave=\"transition ease-in-out duration-300 transform\"\n                        leaveFrom=\"translate-x-0\"\n                        leaveTo=\"-translate-x-full\"\n                        >\n                        <Dialog.Panel className=\"relative flex w-full max-w-xs flex-col overflow-y-auto bg-white pb-12 shadow-xl\">\n                            <div className=\"flex px-4 pb-2 pt-5\">\n                            <button\n                                type=\"button\"\n                                className=\"relative -m-2 inline-flex items-center justify-center rounded-md p-2 text-gray-400\"\n                                onClick={() => setOpen(false)}\n                            >\n                                <span className=\"absolute -inset-0.5\" />\n                                <span className=\"sr-only\">Close menu</span>\n                                <XMarkIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                            </button>\n                            </div>\n\n                            {/* Links */}\n                            <Tab.Group as=\"div\" className=\"mt-2\">\n                            <div className=\"border-b border-gray-200\">\n                                <Tab.List className=\"-mb-px flex space-x-8 px-4\">\n                                {category.map((category) => (\n                                    <Tab\n                                    key={category.name}\n                                    className={({ selected }) =>\n                                        classNames(\n                                        selected ? 'border-indigo-600 text-indigo-600' : 'border-transparent text-gray-900',\n                                        'flex-1 whitespace-nowrap border-b-2 px-1 py-4 text-base font-medium'\n                                        )\n                                    }\n                                    >\n                                    {category.name}\n                                    </Tab>\n                                ))}\n                                </Tab.List>\n                            </div>\n\n                            <Tab.Panels as={Fragment}>\n                                {category.map((category) => (\n                                <Tab.Panel key={category.name} className=\"space-y-10 px-4 pb-8 pt-10\">\n                                    <div className=\"grid grid-cols-2 gap-x-4\">\n                                    {category.features.map((item) => (\n                                        <div key={item.name} className=\"group relative text-sm\">\n                                        <div className=\"aspect-h-1 aspect-w-1 overflow-hidden rounded-lg bg-gray-100 group-hover:opacity-75\">\n                                            <img src={item.imageSrc} alt={item.imageAlt} className=\"object-cover object-center\" />\n                                        </div>\n                                        <a href={item.href} className=\"mt-6 block font-medium text-gray-900\">\n                                            <span className=\"absolute inset-0 z-10\" aria-hidden=\"true\" />\n                                            {item.name}\n                                        </a>\n                                        <p aria-hidden=\"true\" className=\"mt-1\">\n                                            Shop now\n                                        </p>\n                                        </div>\n                                    ))}\n                                    </div>\n                                    {category.sections.map((section) => (\n                                    <div key={section.name}>\n                                        <p id={`${category.id}-${section.id}-heading-mobile`} className=\"font-medium text-gray-900\">\n                                        {section.name}\n                                        </p>\n                                        <ul\n                                        role=\"list\"\n                                        aria-labelledby={`${category.id}-${section.id}-heading-mobile`}\n                                        className=\"mt-6 flex flex-col space-y-6\"\n                                        >\n                                        {section.section_items.map((item) => (\n                                            <li key={item.name} className=\"flow-root\">\n                                                <Link href={route('product.filter', item.id)} className=\"hover:text-gray-800\">\n                                                    {item.name}\n                                                </Link>\n                                            </li>\n                                        ))}\n                                        </ul>\n                                    </div>\n                                    ))}\n                                </Tab.Panel>\n                                ))}\n                            </Tab.Panels>\n                            </Tab.Group>\n\n                            {/* <div className=\"space-y-6 border-t border-gray-200 px-4 py-6\">\n                            <div className=\"flow-root\">\n                                <a href=\"#\" className=\"-m-2 block p-2 font-medium text-gray-900\">\n                                Sign in\n                                </a>\n                            </div>\n                            <div className=\"flow-root\">\n                                <a href=\"#\" className=\"-m-2 block p-2 font-medium text-gray-900\">\n                                Create account\n                                </a>\n                            </div>\n                            </div> */}\n\n                            <div className=\"border-t border-gray-200 px-4 py-6\">\n                            <a href=\"#\" className=\"-m-2 flex items-center p-2\">\n                                <img\n                                src=\"https://tailwindui.com/img/flags/flag-canada.svg\"\n                                alt=\"\"\n                                className=\"block h-auto w-5 flex-shrink-0\"\n                                />\n                                <span className=\"ml-3 block text-base font-medium text-gray-900\">PHP</span>\n                                <span className=\"sr-only\">, change currency</span>\n                            </a>\n                            </div>\n                        </Dialog.Panel>\n                        </Transition.Child>\n                    </div>\n                    </Dialog>\n                </Transition.Root>\n\n                <header className=\"relative bg-white\">\n                    {/* <p className=\"flex h-10 items-center justify-center bg-indigo-600 px-4 text-sm font-medium text-white sm:px-6 lg:px-8\">\n                    Get free delivery on orders over $100\n                    </p> */}\n\n                    <nav aria-label=\"Top\" className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\n                    <div className=\"\">\n                        <div className=\"flex h-16 items-center\">\n                        <button\n                            type=\"button\"\n                            className=\"relative rounded-md bg-white p-2 text-gray-400 lg:hidden\"\n                            onClick={() => setOpen(true)}\n                        >\n                            <span className=\"absolute -inset-0.5\" />\n                            <span className=\"sr-only\">Open menu</span>\n                            <Bars3Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                        </button>\n\n                        {/* Logo */}\n                        {/* <div className=\"ml-4 flex lg:ml-0\">\n                            <a href=\"#\">\n                            <span className=\"sr-only\">Your Company</span>\n                            <img\n                                className=\"h-8 w-auto\"\n                                src=\"../images/ap_clothing_store.png\"\n                                alt=\"\"\n                            />\n                            </a>\n                        </div> */}\n\n                        {/* Flyout menus */}\n                        <Popover.Group className=\"hidden lg:ml-8 lg:block lg:self-stretch\">\n                            <div className=\"flex h-full space-x-8\">\n                            {category.map((category) => (\n                                <Popover key={category.name} className=\"flex\">\n                                {({ open }) => (\n                                    <>\n                                    <div className=\"relative flex\">\n                                        <Popover.Button\n                                        className={classNames(\n                                            open\n                                            ? 'border-indigo-600 text-indigo-600'\n                                            : 'border-transparent text-gray-700 hover:text-gray-800',\n                                            'relative z-10 -mb-px flex items-center border-b-2 pt-px text-sm font-medium transition-colors duration-200 ease-out'\n                                        )}\n                                        >\n                                        {category.name}\n                                        </Popover.Button>\n                                    </div>\n\n                                    <Transition\n                                        as={Fragment}\n                                        enter=\"transition ease-out duration-200\"\n                                        enterFrom=\"opacity-0\"\n                                        enterTo=\"opacity-100\"\n                                        leave=\"transition ease-in duration-150\"\n                                        leaveFrom=\"opacity-100\"\n                                        leaveTo=\"opacity-0\"\n                                    >\n                                        <Popover.Panel className=\"absolute inset-x-0 top-full text-sm text-gray-500\">\n                                        {/* Presentational element used to render the bottom shadow, if we put the shadow on the actual panel it pokes out the top, so we use this shorter element to hide the top of the shadow */}\n                                        <div className=\"absolute inset-0 top-1/2 bg-white shadow\" aria-hidden=\"true\" />\n\n                                        <div className=\"relative bg-white\">\n                                            <div className=\"mx-auto max-w-7xl px-8\">\n                                            <div className=\"grid grid-cols-2 gap-x-8 gap-y-10 py-16\">\n\n                                                {/* Featureds */}\n                                                <div className=\"col-start-2 grid grid-cols-2 gap-x-8\">\n                                                {category.features.map((item) => (\n                                                    <div key={item.name} className=\"group relative text-base sm:text-sm\">\n                                                    <div className=\"aspect-h-1 aspect-w-1 overflow-hidden rounded-lg bg-gray-100 group-hover:opacity-75\">\n                                                        <img\n                                                            // src={\"images/profilePic.jpeg\"}\n                                                            src={\"images/profilePic.jpeg\" ? \"../images/profilePic.jpeg\" : \"images/profilePic.jpeg\"}\n                                                            alt={item.imageAlt}\n                                                        className=\"object-cover object-center\"\n                                                        />\n                                                    </div>\n                                                    <a href={item.href} className=\"mt-6 block font-medium text-gray-900\">\n                                                        <span className=\"absolute inset-0 z-10\" aria-hidden=\"true\" />\n                                                        {item.name}\n                                                    </a>\n                                                    <p aria-hidden=\"true\" className=\"mt-1\">\n                                                        Shop now\n                                                    </p>\n                                                    </div>\n                                                ))}\n                                                </div>\n\n                                                {/* SECTION */}\n                                                <div className=\"row-start-1 grid grid-cols-3 gap-x-8 gap-y-10 text-sm\">\n                                                {category.sections.map((section) => (\n                                                    <div key={section.name}>\n                                                    <p id={`${section.name}-heading`} className=\"font-medium text-gray-900\">\n                                                        {section.name}\n                                                    </p>\n                                                    <ul\n                                                        role=\"list\"\n                                                        aria-labelledby={`${section.name}-heading`}\n                                                        className=\"mt-6 space-y-6 sm:mt-4 sm:space-y-4\"\n                                                    >\n                                                        {section.section_items.map((item) => (\n                                                        <li key={item.name} className=\"flex\">\n                                                            <Link href={route('product.filter', item.id)} className=\"hover:text-gray-800\">\n                                                            {item.name}\n                                                            </Link>\n                                                        </li>\n                                                        ))}\n                                                    </ul>\n                                                    </div>\n                                                ))}\n                                                </div>\n                                            </div>\n                                            </div>\n                                        </div>\n                                        </Popover.Panel>\n                                    </Transition>\n                                    </>\n                                )}\n                                </Popover>\n                            ))}\n\n                            </div>\n                        </Popover.Group>\n\n                        <div className=\"ml-auto flex items-center\">\n                            {/* <div className=\"hidden lg:flex lg:flex-1 lg:items-center lg:justify-end lg:space-x-6\">\n                            <a href=\"#\" className=\"text-sm font-medium text-gray-700 hover:text-gray-800\">\n                                Sign in\n                            </a>\n                            <span className=\"h-6 w-px bg-gray-200\" aria-hidden=\"true\" />\n                            <a href=\"#\" className=\"text-sm font-medium text-gray-700 hover:text-gray-800\">\n                                Create account\n                            </a>\n                            </div> */}\n\n                            {/* <div className=\"relative inline-block text-left\">\n                                <button\n                                    onClick={togglePopover}\n                                    className=\"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                                >\n                                    <img src={getFlagImageUrl(selectedCurrency)} alt=\"\" className=\"block h-4 w-auto\" />\n                                    <span className=\"ml-2\">{selectedCurrency}</span>\n                                    <svg className=\"ml-2 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                                    <path fillRule=\"evenodd\" d=\"M10 12a1 1 0 01-.7-.3l-4-4a1 1 0 111.4-1.4L10 10.6l3.3-3.3a1 1 0 111.4 1.4l-4 4a1 1 0 01-.7.3z\" clipRule=\"evenodd\" />\n                                    </svg>\n                                </button>\n                            </div> */}\n\n                            {/* Search */}\n                            {/* <div className=\"flex lg:ml-6\">\n                            <a href=\"#\" className=\"p-2 text-gray-400 hover:text-gray-500\">\n                                <span className=\"sr-only\">Search</span>\n                                <MagnifyingGlassIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                            </a>\n                            </div> */}\n                            <Search allUsersData={ products } setFilteredData={ setFilteredData }/>\n\n                            {/* Cart */}\n                            <div className=\"ml-4 flow-root lg:ml-6\">\n                                <a href=\"#\" className=\"group -m-2 flex items-center p-2\">\n                                    <ShoppingBagIcon\n                                    className=\"h-6 w-6 flex-shrink-0 text-gray-400 group-hover:text-gray-500\"\n                                    aria-hidden=\"true\"\n                                    onClick={() => setOpenCart(true)}\n                                />\n\n                                <ShoppingCart openCart={openCart} setOpenCart={setOpenCart} purchases={ purchases } userCurrencySetting={ userCurrencySetting }/>\n\n                                <span className=\"ml-2 text-sm font-medium text-gray-700 group-hover:text-gray-800\">{ purchases.length }</span>\n                                <span className=\"sr-only\">items in cart, view bag</span>\n                            </a>\n                            </div>\n                        </div>\n                        </div>\n                    </div>\n                    </nav>\n                </header>\n            </div>\n        </div>\n    )\n}\n"],"names":["classNames","classes","ShopNavLink","auth","category","products","purchases","userCurrencySetting","setFilteredData","open","setOpen","useState","openCart","setOpenCart","jsx","Head","jsxs","Transition","Fragment","Dialog","XMarkIcon","Tab","selected","item","section","Link","Bars3Icon","Popover","Search","ShoppingBagIcon","ShoppingCart"],"mappings":"66CAWE,SAASA,KAAcC,EAAS,CAC9B,OAAOA,EAAQ,OAAO,OAAO,EAAE,KAAK,GAAG,CACzC,CAEsB,SAAAC,GAAY,CAAE,KAAAC,EAAM,SAAAC,EAAU,SAAAC,EAAU,UAAAC,EAAW,oBAAAC,EAAqB,gBAAAC,GAChG,CACI,KAAM,CAACC,EAAMC,CAAO,EAAIC,WAAS,EAAK,EAChC,CAACC,EAAUC,CAAW,EAAIF,WAAS,EAAK,EAElBA,OAAAA,EAAAA,SAAS,EAAK,EACMA,EAAAA,SAAS,KAAK,SA4BzD,MACG,CAAA,SAAA,CAACG,EAAAA,IAAAC,EAAA,CAAK,MAAM,MAAO,CAAA,EAEnBC,EAAAA,KAAC,MAAI,CAAA,UAAU,WAEX,SAAA,CAAAF,EAAA,IAACG,EAAW,KAAX,CAAgB,KAAMR,EAAM,GAAKS,EAAAA,SAC9B,SAACF,EAAA,KAAAG,EAAA,CAAO,GAAG,MAAM,UAAU,0BAA0B,QAAST,EAC9D,SAAA,CAAAI,EAAA,IAACG,EAAW,MAAX,CACG,GAAIC,EAAAA,SACJ,MAAM,8CACN,UAAU,YACV,QAAQ,cACR,MAAM,8CACN,UAAU,cACV,QAAQ,YAER,SAAAJ,EAAAA,IAAC,MAAI,CAAA,UAAU,sCAAuC,CAAA,CAAA,CAC1D,EAEAA,EAAAA,IAAC,MAAI,CAAA,UAAU,0BACX,SAAAA,EAAA,IAACG,EAAW,MAAX,CACD,GAAIC,EAAAA,SACJ,MAAM,gDACN,UAAU,oBACV,QAAQ,gBACR,MAAM,gDACN,UAAU,gBACV,QAAQ,oBAER,SAACF,EAAA,KAAAG,EAAO,MAAP,CAAa,UAAU,kFACpB,SAAA,CAACL,EAAAA,IAAA,MAAA,CAAI,UAAU,sBACf,SAAAE,EAAA,KAAC,SAAA,CACG,KAAK,SACL,UAAU,qFACV,QAAS,IAAMN,EAAQ,EAAK,EAE5B,SAAA,CAACI,EAAAA,IAAA,OAAA,CAAK,UAAU,qBAAsB,CAAA,EACrCA,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAU,aAAA,EACnCA,EAAA,IAAAM,EAAA,CAAU,UAAU,UAAU,cAAY,OAAO,CAAA,CAAA,CAAA,EAEtD,SAGCC,EAAI,MAAJ,CAAU,GAAG,MAAM,UAAU,OAC9B,SAAA,CAAAP,EAAA,IAAC,MAAI,CAAA,UAAU,2BACX,SAAAA,EAAAA,IAACO,EAAI,KAAJ,CAAS,UAAU,6BACnB,SAAAjB,EAAS,IAAKA,GACXU,EAAA,IAACO,EAAA,CAED,UAAW,CAAC,CAAE,SAAAC,CAAA,IACVtB,EACAsB,EAAW,oCAAsC,mCACjD,qEACA,EAGH,SAAAlB,EAAS,IAAA,EARLA,EAAS,IAAA,CAUjB,EACD,CACJ,CAAA,EAECU,EAAA,IAAAO,EAAI,OAAJ,CAAW,GAAIH,EACX,SAAA,SAAAd,EAAS,IAAKA,GACdY,EAAA,KAAAK,EAAI,MAAJ,CAA8B,UAAU,6BACrC,SAAA,CAAAP,EAAA,IAAC,MAAI,CAAA,UAAU,2BACd,SAAAV,EAAS,SAAS,IAAKmB,GACpBP,EAAAA,KAAC,MAAoB,CAAA,UAAU,yBAC/B,SAAA,CAAAF,EAAA,IAAC,MAAI,CAAA,UAAU,sFACX,SAAAA,EAAAA,IAAC,MAAI,CAAA,IAAKS,EAAK,SAAU,IAAKA,EAAK,SAAU,UAAU,4BAA6B,CAAA,EACxF,SACC,IAAE,CAAA,KAAMA,EAAK,KAAM,UAAU,uCAC1B,SAAA,CAAAT,EAAA,IAAC,OAAK,CAAA,UAAU,wBAAwB,cAAY,OAAO,EAC1DS,EAAK,IAAA,EACV,QACC,IAAE,CAAA,cAAY,OAAO,UAAU,OAAO,SAEvC,WAAA,CAVU,CAAA,EAAAA,EAAK,IAWf,CACH,EACD,EACCnB,EAAS,SAAS,IAAKoB,UACvB,MACG,CAAA,SAAA,CAAAV,EAAA,IAAC,IAAE,CAAA,GAAI,GAAGV,EAAS,EAAE,IAAIoB,EAAQ,EAAE,kBAAmB,UAAU,4BAC/D,SAAAA,EAAQ,KACT,EACAV,EAAA,IAAC,KAAA,CACD,KAAK,OACL,kBAAiB,GAAGV,EAAS,EAAE,IAAIoB,EAAQ,EAAE,kBAC7C,UAAU,+BAET,SAAAA,EAAQ,cAAc,IAAKD,SACvB,KAAmB,CAAA,UAAU,YAC1B,SAAAT,EAAAA,IAACW,EAAK,CAAA,KAAM,MAAM,iBAAkBF,EAAK,EAAE,EAAG,UAAU,sBACnD,WAAK,IACV,CAAA,CAAA,EAHKA,EAAK,IAId,CACH,CAAA,CACD,CAAA,GAhBMC,EAAQ,IAiBlB,CACC,CApCWpB,CAAAA,EAAAA,EAAS,IAqCzB,CACC,EACL,CAAA,EACA,EAeAU,EAAAA,IAAC,OAAI,UAAU,qCACf,gBAAC,IAAE,CAAA,KAAK,IAAI,UAAU,6BAClB,SAAA,CAAAA,EAAA,IAAC,MAAA,CACD,IAAI,mDACJ,IAAI,GACJ,UAAU,gCAAA,CACV,EACCA,EAAA,IAAA,OAAA,CAAK,UAAU,iDAAiD,SAAG,MAAA,EACnEA,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAiB,oBAAA,CAAA,CAAA,CAC/C,CACA,CAAA,CAAA,EACJ,CAAA,CAAA,EAEJ,CAAA,CAAA,CACA,CACJ,CAAA,QAEC,SAAO,CAAA,UAAU,oBAKd,SAAAA,EAAA,IAAC,OAAI,aAAW,MAAM,UAAU,yCAChC,eAAC,MAAI,CAAA,UAAU,GACX,SAACE,EAAA,KAAA,MAAA,CAAI,UAAU,yBACf,SAAA,CAAAA,EAAA,KAAC,SAAA,CACG,KAAK,SACL,UAAU,2DACV,QAAS,IAAMN,EAAQ,EAAI,EAE3B,SAAA,CAACI,EAAAA,IAAA,OAAA,CAAK,UAAU,qBAAsB,CAAA,EACrCA,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAS,YAAA,EAClCA,EAAA,IAAAY,EAAA,CAAU,UAAU,UAAU,cAAY,OAAO,CAAA,CAAA,CACtD,EAeAZ,EAAAA,IAACa,EAAQ,MAAR,CAAc,UAAU,0CACrB,SAAAb,EAAA,IAAC,MAAI,CAAA,UAAU,wBACd,SAAAV,EAAS,IAAKA,GACVU,EAAAA,IAAAa,EAAA,CAA4B,UAAU,OACtC,UAAC,CAAE,KAAAlB,CAAK,IAELO,EAAA,KAAAE,EAAA,SAAA,CAAA,SAAA,CAACJ,EAAAA,IAAA,MAAA,CAAI,UAAU,gBACX,SAAAA,EAAA,IAACa,EAAQ,OAAR,CACD,UAAW3B,EACPS,EACE,oCACA,uDACF,qHACJ,EAEC,SAAAL,EAAS,IAAA,CAAA,EAEd,EAEAU,EAAA,IAACG,EAAA,CACG,GAAIC,EAAAA,SACJ,MAAM,mCACN,UAAU,YACV,QAAQ,cACR,MAAM,kCACN,UAAU,cACV,QAAQ,YAER,SAACF,EAAA,KAAAW,EAAQ,MAAR,CAAc,UAAU,oDAEzB,SAAA,CAAAb,EAAA,IAAC,MAAI,CAAA,UAAU,2CAA2C,cAAY,OAAO,EAE7EA,EAAA,IAAC,MAAI,CAAA,UAAU,oBACX,SAAAA,EAAA,IAAC,MAAI,CAAA,UAAU,yBACf,SAAAE,OAAC,MAAI,CAAA,UAAU,0CAGX,SAAA,CAAAF,EAAA,IAAC,MAAI,CAAA,UAAU,uCACd,SAAAV,EAAS,SAAS,IAAKmB,GACpBP,EAAAA,KAAC,MAAoB,CAAA,UAAU,sCAC/B,SAAA,CAACF,EAAAA,IAAA,MAAA,CAAI,UAAU,sFACX,SAAAA,EAAA,IAAC,MAAA,CAEG,IAAgC,4BAChC,IAAKS,EAAK,SACd,UAAU,4BAAA,CAAA,EAEd,SACC,IAAE,CAAA,KAAMA,EAAK,KAAM,UAAU,uCAC1B,SAAA,CAAAT,EAAA,IAAC,OAAK,CAAA,UAAU,wBAAwB,cAAY,OAAO,EAC1DS,EAAK,IAAA,EACV,QACC,IAAE,CAAA,cAAY,OAAO,UAAU,OAAO,SAEvC,WAAA,CAfU,CAAA,EAAAA,EAAK,IAgBf,CACH,EACD,EAGAT,EAAAA,IAAC,MAAI,CAAA,UAAU,wDACd,SAAAV,EAAS,SAAS,IAAKoB,GACpBR,EAAA,KAAC,MACD,CAAA,SAAA,CAACF,EAAAA,IAAA,IAAA,CAAE,GAAI,GAAGU,EAAQ,IAAI,WAAY,UAAU,4BACvC,SAAAA,EAAQ,IACb,CAAA,EACAV,EAAA,IAAC,KAAA,CACG,KAAK,OACL,kBAAiB,GAAGU,EAAQ,IAAI,WAChC,UAAU,sCAET,SAAAA,EAAQ,cAAc,IAAKD,SAC3B,KAAmB,CAAA,UAAU,OAC1B,SAAAT,EAAAA,IAACW,EAAK,CAAA,KAAM,MAAM,iBAAkBF,EAAK,EAAE,EAAG,UAAU,sBACvD,WAAK,IACN,CAAA,CAAA,EAHKA,EAAK,IAId,CACC,CAAA,CACL,CAhBU,CAAA,EAAAC,EAAQ,IAiBlB,CACH,EACD,CAAA,CACJ,CAAA,CACA,CAAA,EACJ,CAAA,EACA,CAAA,CACJ,CAAA,CACA,CAAA,CApFUpB,EAAAA,EAAS,IAsFvB,CACH,EAED,CACJ,CAAA,EAEAY,EAAAA,KAAC,MAAI,CAAA,UAAU,4BA+BX,SAAA,CAACF,EAAAA,IAAAc,EAAA,CAAO,aAAevB,EAAW,gBAAAG,CAAmC,CAAA,EAGrEM,EAAAA,IAAC,OAAI,UAAU,yBACX,gBAAC,IAAE,CAAA,KAAK,IAAI,UAAU,mCAClB,SAAA,CAAAA,EAAA,IAACe,EAAA,CACD,UAAU,gEACV,cAAY,OACZ,QAAS,IAAMhB,EAAY,EAAI,CAAA,CACnC,EAECC,EAAA,IAAAgB,EAAA,CAAa,SAAAlB,EAAoB,YAAAC,EAA0B,UAAAP,EAAwB,oBAAAC,EAA2C,EAE9HO,EAAA,IAAA,OAAA,CAAK,UAAU,mEAAqE,WAAU,OAAQ,EACtGA,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAuB,0BAAA,CAAA,CAAA,CACrD,CACA,CAAA,CAAA,EACJ,CAAA,EACA,CAAA,CACJ,CACA,CAAA,EACJ,CAAA,EACJ,CACJ,CAAA,CAAA,CAER"}