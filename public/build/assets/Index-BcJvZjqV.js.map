{"version":3,"file":"Index-BcJvZjqV.js","sources":["../../../resources/js/Pages/Todo/Index.jsx"],"sourcesContent":["import Alert from '@/Components/Alert';\nimport Filters from '@/Pages/Todo/Filters';\nimport Pagination from '@/Components/Pagination';\nimport AuthenticatedLayout from '@/Layouts/AuthenticatedLayout';\nimport { PlusIcon } from '@heroicons/react/20/solid';\nimport { Head, Link, useForm, usePage } from '@inertiajs/react';\nimport { useState, useEffect } from 'react';\n\nexport default function Index({ auth, flash }) {\n\n    const {todolist} = usePage().props;\n\n    // console.log(todolist);\n\n    const [allTodolist, setAllcountry] = useState([])\n    const [filteredData, setFilteredData] = useState([])\n\n    useEffect(() => {\n        const getusers = async() => {\n            const getres = await fetch(\"http://127.0.0.1:8000/api/task/searchBar\")\n            const setusers = await getres.json();\n            // console.log(setusers)\n            setAllcountry(await setusers.results)\n        }\n        getusers()\n    }, []);\n\n    return (\n        <AuthenticatedLayout\n            user={auth.user}\n            // header={<h2 className=\"font-semibold text-xl text-gray-800 leading-tight\">To Do List</h2>}\n        >\n            <Alert flash={ flash } />\n\n            <Head title=\"Task\" />\n\n            <div className=\"p-6\">\n                <div className=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">\n                    <div className=\"bg-white overflow-hidden shadow-sm sm:rounded-lg p-6\">\n\n                    <div className=\"flex justify-between items-center\">\n                        {\n                            todolist.data.length == 0 ?\n                            <div></div>\n                            : \n                            <div>\n                                <Filters allUsersData={ todolist.data } setFilteredData={ setFilteredData }/>\n                            </div>\n                        }\n                        \n                        <Link href={route('todo.create')} className=\"bg-gray-800 hover:bg-gray-500 text-white font-bold py-2 px-4 mr-4 mb-4 rounded-sm focus:outline-none focus:shadow-outline flex items-center\">\n                            <PlusIcon className=\"w-5\" />\n                        </Link>\n                    </div>\n                    {\n                        todolist.data.length == 0 ?\n                            <div className=\"text-gray-300 h-96 flex items-center justify-center w-full text-3xl\">No Record Found</div> \n                        :\n                         <div>\n                         <ul role=\"list\" className=\"divide-y divide-gray-100\">\n                         {\n                             filteredData.length !== 0 && (\n                                 <div className=\"\">\n                                     {\n                                         filteredData.slice(0, 15).map((value, index) => {\n                                             return (\n                                                 <li key={value.name} className=\"flex justify-between gap-x-6 py-5\">\n                                                     <div className=\"flex min-w-0 gap-x-4\">\n                                                         <div className=\"min-w-0 flex-auto\">\n                                                             <p className=\"text-sm font-semibold leading-6 text-gray-900\"> <Link key={ value.id } href={route('todo.edit', value.encrypted_id )} > {value.name} </Link> </p>\n                                                             <p className=\"mt-1 truncate text-xs leading-5 text-gray-500\">{value.task_desc}</p>\n                                                         </div>\n                                                     </div>\n                                                     <div className=\"hidden shrink-0 sm:flex sm:flex-col sm:items-end\">\n                                                         {value.completed ? (\n                                                         <div className=\"mt-1 flex items-center gap-x-1.5\">\n                                                             <div className=\"flex-none rounded-full bg-gray-500/20 p-1\">\n                                                             <div className=\"h-1.5 w-1.5 rounded-full bg-gray-500\" />\n                                                             </div>\n                                                             <p className=\"text-xs leading-5 text-gray-500\">Dated: {value.deadline}</p>\n                                                         </div>\n                                                         ) : (\n                                                         <div className=\"mt-1 flex items-center gap-x-1.5\">\n                                                             <div className=\"flex-none rounded-full bg-emerald-500/20 p-1\">\n                                                             <div className=\"h-1.5 w-1.5 rounded-full bg-emerald-500\" />\n                                                             </div>\n                                                             <p className=\"text-xs leading-5 text-gray-500\">Dated: {value.deadline}</p>\n                                                         </div>\n                                                         )}\n                                                     </div>\n                                                 </li>\n                                             )\n                                         })\n                                     }\n                                 </div>\n                             )\n                         }\n                         </ul>\n                         { filteredData.length === 0 ?\n                         <ul role=\"list\" className=\"divide-y divide-gray-100\">\n                             {todolist.data.map(todo => (\n                                 <li key={todo.name} className=\"flex justify-between gap-x-6 py-5\">\n                                 <div className=\"flex min-w-0 gap-x-4\">\n                                     <div className=\"min-w-0 flex-auto\">\n                                         <p className=\"text-sm font-semibold leading-6 text-gray-900\"> <Link key={ todo.id } href={route('todo.edit', todo.encrypted_id )} > {todo.name} </Link> </p>\n                                         <p className=\"mt-1 truncate text-xs leading-5 text-gray-500\">{todo.task_desc}</p>\n                                     </div>\n                                 </div>\n                                 <div className=\"hidden shrink-0 sm:flex sm:flex-col sm:items-end\">\n                                     {todo.completed ? (\n                                     <div className=\"mt-1 flex items-center gap-x-1.5\">\n                                         <div className=\"flex-none rounded-full bg-gray-500/20 p-1\">\n                                         <div className=\"h-1.5 w-1.5 rounded-full bg-gray-500\" />\n                                         </div>\n                                         <p className=\"text-xs leading-5 text-gray-500\">Dated: {todo.deadline}</p>\n                                     </div>\n                                     ) : (\n                                     <div className=\"mt-1 flex items-center gap-x-1.5 min-w-0\">\n                                         <div className=\"flex-none rounded-full bg-emerald-500/20 p-1\">\n                                         <div className=\"h-1.5 w-1.5 rounded-full bg-emerald-500\" />\n                                         </div>\n                                         <div className=\"min-w-0 flex-auto\">\n     \n                                         </div>\n                                         <p className=\"text-xs leading-5 text-gray-500\">Dated: {todo.deadline}</p>\n                                     </div>\n                                     )}\n                                 </div>\n                                 </li>\n                             ))}\n                         </ul>\n                         : null }\n                            <Pagination getData={ todolist.links } getLength={ todolist }/>\n                        </div>\n                    }\n                    </div>\n                </div>\n\n            </div>\n\n\n        </AuthenticatedLayout>\n    );\n}\n"],"names":["Index","auth","flash","todolist","usePage","allTodolist","setAllcountry","useState","filteredData","setFilteredData","useEffect","setusers","jsxs","AuthenticatedLayout","jsx","Alert","Head","Filters","Link","PlusIcon","value","index","todo","Pagination"],"mappings":"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"}