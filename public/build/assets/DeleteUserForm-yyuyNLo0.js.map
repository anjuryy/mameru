{"version":3,"file":"DeleteUserForm-yyuyNLo0.js","sources":["../../../resources/js/Pages/Profile/Partials/DeleteUserForm.jsx"],"sourcesContent":["import { useRef, useState } from 'react';\nimport DangerButton from '@/Components/DangerButton';\nimport InputError from '@/Components/InputError';\nimport InputLabel from '@/Components/InputLabel';\nimport Modal from '@/Components/Modal';\nimport SecondaryButton from '@/Components/SecondaryButton';\nimport TextInput from '@/Components/TextInput';\nimport { useForm } from '@inertiajs/react';\n\nexport default function DeleteUserForm({ className = '' }) {\n    const [confirmingUserDeletion, setConfirmingUserDeletion] = useState(false);\n    const passwordInput = useRef();\n\n    const {\n        data,\n        setData,\n        delete: destroy,\n        processing,\n        reset,\n        errors,\n    } = useForm({\n        password: '',\n    });\n\n    const confirmUserDeletion = () => {\n        setConfirmingUserDeletion(true);\n    };\n\n    const deleteUser = (e) => {\n        e.preventDefault();\n\n        destroy(route('profile.destroy'), {\n            preserveScroll: true,\n            onSuccess: () => closeModal(),\n            onError: () => passwordInput.current.focus(),\n            onFinish: () => reset(),\n        });\n    };\n\n    const closeModal = () => {\n        setConfirmingUserDeletion(false);\n\n        reset();\n    };\n\n    return (\n        <section className={`space-y-6 ${className}`}>\n            <header>\n                <h2 className=\"text-lg font-medium text-gray-900\">Delete Account</h2>\n\n                <p className=\"mt-1 text-sm text-gray-600\">\n                    Once your account is deleted, all of its resources and data will be permanently deleted. Before\n                    deleting your account, please download any data or information that you wish to retain.\n                </p>\n            </header>\n\n            <DangerButton onClick={confirmUserDeletion}>Delete Account</DangerButton>\n\n            <Modal show={confirmingUserDeletion} onClose={closeModal}>\n                <form onSubmit={deleteUser} className=\"p-6\">\n                    <h2 className=\"text-lg font-medium text-gray-900\">\n                        Are you sure you want to delete your account?\n                    </h2>\n\n                    <p className=\"mt-1 text-sm text-gray-600\">\n                        Once your account is deleted, all of its resources and data will be permanently deleted. Please\n                        enter your password to confirm you would like to permanently delete your account.\n                    </p>\n\n                    <div className=\"mt-6\">\n                        <InputLabel htmlFor=\"password\" value=\"Password\" className=\"sr-only\" />\n\n                        <TextInput\n                            id=\"password\"\n                            type=\"password\"\n                            name=\"password\"\n                            ref={passwordInput}\n                            value={data.password}\n                            onChange={(e) => setData('password', e.target.value)}\n                            className=\"mt-1 block w-3/4\"\n                            isFocused\n                            placeholder=\"Password\"\n                        />\n\n                        <InputError message={errors.password} className=\"mt-2\" />\n                    </div>\n\n                    <div className=\"mt-6 flex justify-end\">\n                        <SecondaryButton onClick={closeModal}>Cancel</SecondaryButton>\n\n                        <DangerButton className=\"ms-3\" disabled={processing}>\n                            Delete Account\n                        </DangerButton>\n                    </div>\n                </form>\n            </Modal>\n        </section>\n    );\n}\n"],"names":["DeleteUserForm","className","confirmingUserDeletion","setConfirmingUserDeletion","useState","passwordInput","useRef","data","setData","destroy","processing","reset","errors","useForm","confirmUserDeletion","deleteUser","e","closeModal","jsxs","jsx","DangerButton","Modal","InputLabel","TextInput","InputError","SecondaryButton"],"mappings":"g6CASA,SAAwBA,GAAe,CAAE,UAAAC,EAAY,IAAM,CACvD,KAAM,CAACC,EAAwBC,CAAyB,EAAIC,WAAS,EAAK,EACpEC,EAAgBC,EAAAA,SAEhB,CACF,KAAAC,EACA,QAAAC,EACA,OAAQC,EACR,WAAAC,EACA,MAAAC,EACA,OAAAC,GACAC,EAAQ,CACR,SAAU,EAAA,CACb,EAEKC,EAAsB,IAAM,CAC9BX,EAA0B,EAAI,CAAA,EAG5BY,EAAcC,GAAM,CACtBA,EAAE,eAAe,EAETP,EAAA,MAAM,iBAAiB,EAAG,CAC9B,eAAgB,GAChB,UAAW,IAAMQ,EAAW,EAC5B,QAAS,IAAMZ,EAAc,QAAQ,MAAM,EAC3C,SAAU,IAAMM,EAAM,CAAA,CACzB,CAAA,EAGCM,EAAa,IAAM,CACrBd,EAA0B,EAAK,EAEzBQ,GAAA,EAGV,OACKO,EAAA,KAAA,UAAA,CAAQ,UAAW,aAAajB,CAAS,GACtC,SAAA,CAAAiB,OAAC,SACG,CAAA,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAoC,SAAc,iBAAA,EAE/DA,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,SAG1C,0LAAA,CAAA,EACJ,EAECA,EAAA,IAAAC,EAAA,CAAa,QAASN,EAAqB,SAAc,iBAAA,EAE1DK,EAAA,IAACE,EAAM,CAAA,KAAMnB,EAAwB,QAASe,EAC1C,SAAAC,EAAAA,KAAC,OAAK,CAAA,SAAUH,EAAY,UAAU,MAClC,SAAA,CAACI,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAoC,SAElD,gDAAA,EAECA,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,SAG1C,oLAAA,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,OACX,SAAA,CAAAC,MAACG,GAAW,QAAQ,WAAW,MAAM,WAAW,UAAU,UAAU,EAEpEH,EAAA,IAACI,EAAA,CACG,GAAG,WACH,KAAK,WACL,KAAK,WACL,IAAKlB,EACL,MAAOE,EAAK,SACZ,SAAWS,GAAMR,EAAQ,WAAYQ,EAAE,OAAO,KAAK,EACnD,UAAU,mBACV,UAAS,GACT,YAAY,UAAA,CAChB,QAECQ,EAAW,CAAA,QAASZ,EAAO,SAAU,UAAU,OAAO,CAAA,EAC3D,EAEAM,EAAAA,KAAC,MAAI,CAAA,UAAU,wBACX,SAAA,CAACC,EAAA,IAAAM,EAAA,CAAgB,QAASR,EAAY,SAAM,SAAA,QAE3CG,EAAa,CAAA,UAAU,OAAO,SAAUV,EAAY,SAErD,iBAAA,CAAA,EACJ,CAAA,CAAA,CACJ,CACJ,CAAA,CACJ,CAAA,CAAA,CAER"}