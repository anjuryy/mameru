{"version":3,"file":"Board-BBLuZ3I7.js","sources":["../../../resources/js/Pages/Kanban/Board.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport BurnBarrel from \"./BurnBarrel\";\nimport Column from \"./Column\";\nimport AddColumn from \"./AddColumn\";\nimport { usePage, useForm } from '@inertiajs/react'\nimport { useEffect } from \"react\";\n\nconst Board = () => {\n    const nice = usePage().props\n    const { board } = usePage().props\n    const { card } = usePage().props\n    const { board_encrypted_id } = usePage().props\n\n    // console.log(card);\n    // console.log(nice);\n    const DEFAULT_CARDS_WITH_STRING_ID = card.map(card => ({\n        ...card,\n        id: card.id.toString()\n    }));\n\n    const [cards, setCards] = useState(DEFAULT_CARDS_WITH_STRING_ID);\n    const [columns, setColumns] = useState(board);\n\n    const { data, post } = useForm({\n        title: '',\n        temp_id: ''\n    })\n\n    const addColumn = (title) => {\n        let temp_id = title.length + Date.now().toString()\n        data.title = title\n        data.temp_id = temp_id\n\n        post(route('board.storeColumn', board_encrypted_id));\n\n        const newColumn = { title, temp_id: temp_id };\n        setColumns([...columns, newColumn]);\n    };\n\n    return (\n        <div className=\"flex h-full w-full gap-3 p-12\">\n            {columns.map((column) => (\n                <Column\n                key={column.temp_id}\n                title={column.title}\n                column={column.id}\n                headingColor=\"text-neutral-500\"\n                cards={cards}\n                setCards={setCards}\n                columns={ setColumns }\n                temp_id={column.temp_id}\n                />\n            ))}\n            <AddColumn addColumn={addColumn} />\n            <BurnBarrel setCards={setCards} />\n        </div>\n    );\n};\n\nexport default Board\n"],"names":["Board","usePage","board","card","board_encrypted_id","DEFAULT_CARDS_WITH_STRING_ID","cards","setCards","useState","columns","setColumns","data","post","useForm","addColumn","title","temp_id","newColumn","jsxs","column","jsx","Column","AddColumn","BurnBarrel"],"mappings":"kuDAOA,MAAMA,GAAQ,IAAM,CACHC,EAAU,EAAA,MACvB,KAAM,CAAE,MAAAC,CAAA,EAAUD,EAAA,EAAU,MACtB,CAAE,KAAAE,CAAA,EAASF,EAAA,EAAU,MACrB,CAAE,mBAAAG,CAAA,EAAuBH,EAAA,EAAU,MAInCI,EAA+BF,EAAK,IAAIA,IAAS,CACnD,GAAGA,EACH,GAAIA,EAAK,GAAG,SAAS,CACvB,EAAA,EAEI,CAACG,EAAOC,CAAQ,EAAIC,WAASH,CAA4B,EACzD,CAACI,EAASC,CAAU,EAAIF,WAASN,CAAK,EAEtC,CAAE,KAAAS,EAAM,KAAAC,CAAK,EAAIC,EAAQ,CAC3B,MAAO,GACP,QAAS,EAAA,CACZ,EAEKC,EAAaC,GAAU,CACzB,IAAIC,EAAUD,EAAM,OAAS,KAAK,IAAA,EAAM,WACxCJ,EAAK,MAAQI,EACbJ,EAAK,QAAUK,EAEVJ,EAAA,MAAM,oBAAqBR,CAAkB,CAAC,EAE7C,MAAAa,EAAY,CAAE,MAAAF,EAAO,QAAAC,GAC3BN,EAAW,CAAC,GAAGD,EAASQ,CAAS,CAAC,CAAA,EAIlC,OAAAC,EAAA,KAAC,MAAI,CAAA,UAAU,gCACV,SAAA,CAAQT,EAAA,IAAKU,GACVC,EAAA,IAACC,EAAA,CAED,MAAOF,EAAO,MACd,OAAQA,EAAO,GACf,aAAa,mBACb,MAAAb,EACA,SAAAC,EACA,QAAUG,EACV,QAASS,EAAO,OAAA,EAPXA,EAAO,OAAA,CASf,EACDC,MAACE,GAAU,UAAAR,EAAsB,EACjCM,MAACG,GAAW,SAAAhB,EAAoB,CACpC,CAAA,CAAA,CAER"}